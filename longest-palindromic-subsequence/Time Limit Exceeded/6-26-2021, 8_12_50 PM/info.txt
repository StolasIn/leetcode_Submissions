{"id":513405335,"lang":"cpp","time":"12Â months","timestamp":1624709570,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/513405335/","is_pending":"Not Pending","title":"Longest Palindromic Subsequence","memory":"N/A","code":"class Solution {\npublic:\n    int longestPalindromeSubseq(string s) {\n        string s1=s;\n        reverse(s1.begin(),s1.end());\n        int m=s.size();\n        string dp[m+1][m+1];\n        for(int i=1;i<=m;i++){\n            for(int j=1;j<=m;j++){\n                if(s[i-1]==s1[j-1]){\n                    dp[i][j]=dp[i-1][j-1]+s[i-1];\n                }\n                else{\n                    if(dp[i-1][j].size()>dp[i][j-1].size()){\n                        dp[i][j]=dp[i-1][j];\n                    }\n                    else{\n                        dp[i][j]=dp[i][j-1];\n                    }\n                }\n            }\n        }\n        cout<<dp[m][m]<<endl;\n        string str=\"\";\n        for(int i=0;i<(dp[m][m].size()+1)/2;i++){\n            str+=dp[m][m][i];\n        }\n        cout<<str<<endl;\n        for(int i=(dp[m][m].size())/2-1;i>=0;i--){\n            str+=dp[m][m][i];\n        }\n        return str.size();\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111000000000000000000000","title_slug":"longest-palindromic-subsequence"}