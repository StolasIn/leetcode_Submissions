{"id":646030354,"lang":"cpp","time":"4Â months","timestamp":1645454886,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/646030354/","is_pending":"Not Pending","title":"Remove Duplicates from Sorted List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteDuplicates(ListNode* head) {\n        if(head==nullptr){\n            retunr head;\n        }\n        ListNode* first = head;\n        ListNode* next = head;\n        while(next!=nullptr){\n            if(first->val == next->val){\n                next = next->next;\n            }\n            else{\n                first->next = next;\n                first = next;\n            }\n        }\n        first->next = nullptr;\n        return head;\n    }\n};","compare_result":null,"title_slug":"remove-duplicates-from-sorted-list"}