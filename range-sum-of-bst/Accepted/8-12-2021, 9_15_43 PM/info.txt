{"id":537362638,"lang":"cpp","time":"10 months, 1 week","timestamp":1628774143,"status_display":"Accepted","runtime":"156 ms","url":"/submissions/detail/537362638/","is_pending":"Not Pending","title":"Range Sum of BST","memory":"64.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int l,h;\n    int sum;\n    void inorder(TreeNode* root){\n        if(root==nullptr) return;\n        inorder(root->left);\n        if(root->val>=l && root->val<=h) sum+=root->val;\n        inorder(root->right);\n    }\n    int rangeSumBST(TreeNode* root, int low, int high) {\n        ios::sync_with_stdio(false);\n        cin.tie(0);\n        cout.tie(0);\n        l=low,h=high;\n        sum=0;\n        inorder(root);\n        return sum;\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"range-sum-of-bst"}