{"id":448413768,"lang":"cpp","time":"1 year, 4 months","timestamp":1611730867,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/448413768/","is_pending":"Not Pending","title":"Path Sum","memory":"21 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool has=false;\n    void dfs(TreeNode* root, int t,int s){\n        if(root==nullptr || has) return;\n        if(s+root->val==t && root->left==nullptr && root->right==nullptr) has=true;\n        dfs(root->left,t,s+root->val);\n        dfs(root->right,t,s+root->val);\n    }\n    bool hasPathSum(TreeNode* root, int targetSum) {\n        if(root==nullptr) return false;\n        dfs(root,targetSum,0);\n        return has;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum"}