{"id":541457101,"lang":"cpp","time":"10Â months","timestamp":1629468985,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/541457101/","is_pending":"Not Pending","title":"Cousins in Binary Tree","memory":"11 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool f;\n    int dep(TreeNode* root,int tar,int& par){\n        if(root==nullptr) return 1e9;\n        if(root->val==tar){\n            f=true;\n            return 0;\n        }\n        int l=dep(root->left,tar,par);\n        if(f){\n            par=root->val;\n            f=false;\n        }\n        int r=dep(root->right,tar,par);\n        if(f){\n            par=root->val;\n            f=false;\n        }\n        return min(l,r)+1;\n    }\n    bool isCousins(TreeNode* root, int x, int y) {\n        f=false;\n        int p1,p2;\n        return (dep(root,x,p1)==dep(root,y,p2)) && p1!=p2;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"cousins-in-binary-tree"}