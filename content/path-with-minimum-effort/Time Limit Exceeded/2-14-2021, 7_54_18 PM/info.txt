{"id":455918077,"lang":"cpp","time":"1 year, 4 months","timestamp":1613303658,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/455918077/","is_pending":"Not Pending","title":"Path With Minimum Effort","memory":"N/A","code":"class Solution {\npublic:\n    int ma=-INT_MAX;\n    int ans=INT_MAX;\n    void dfs(vector<vector<int>>& h,vector<vector<bool>>& vis,int x,int y,int dif,int ma){\n        // cout<<x<<\" \"<<y<<\" \"<<dif<<endl;\n        if(x==h.size()-1 && y==h[0].size()-1){\n            ma=max(ma,abs(h[x][y]-dif));\n            ans=min(ans,ma);\n            return;\n        }\n        if(x<0 || x>=h.size() || y<0 || y>=h[0].size()) return;\n        if(vis[x][y]==true) return;\n        vis[x][y]=true;\n        ma=max(ma,abs(h[x][y]-dif));\n        dfs(h,vis,x-1,y,h[x][y],ma);\n        dfs(h,vis,x,y-1,h[x][y],ma);\n        dfs(h,vis,x+1,y,h[x][y],ma);\n        dfs(h,vis,x,y+1,h[x][y],ma);\n        vis[x][y]=false;\n    }\n    int minimumEffortPath(vector<vector<int>>& heights) {\n        vector<vector<bool>> vis(heights.size(),vector<bool>(heights[0].size(),false));\n        dfs(heights,vis,0,0,heights[0][0],0);\n        return ans;\n    }\n};","compare_result":"111110000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"path-with-minimum-effort"}