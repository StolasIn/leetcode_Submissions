{"id":556265727,"lang":"cpp","time":"9 months, 1 week","timestamp":1631851334,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/556265727/","is_pending":"Not Pending","title":"Construct Binary Tree from Inorder and Postorder Traversal","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int p;\n    unordered_map<int,int> map;\n    TreeNode* part(vector<int>& post, vector<int>& ino,int left,int right){\n        if(right<=left){\n            return nullptr;\n        }\n        int k;\n        k=map[post[p]];\n        p--;\n        TreeNode* tp = new TreeNode(ino[k]);\n        tp->left=part(post,ino,left,k);\n        tp->right=part(post,ino,k+1,right);\n        return tp;\n    }\n    TreeNode* buildTree(vector<int>& ino, vector<int>& post) {\n        int m=ino.size();\n        p=m-1;\n        int cnt=0;\n        for(int i=0;i<m;i++){\n            map[ino[i]]=i;\n        }\n        TreeNode* root=new TreeNode(post[m-1]);\n        int k;\n        k=map[post[m-1]];\n        p--;\n        root->left=part(post,ino,0,k);\n        root->right=part(post,ino,k+1,m);\n        return root;\n    }\n};","compare_result":"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"construct-binary-tree-from-inorder-and-postorder-traversal"}