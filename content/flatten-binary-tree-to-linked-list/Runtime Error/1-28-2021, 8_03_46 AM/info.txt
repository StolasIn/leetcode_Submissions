{"id":448705362,"lang":"cpp","time":"1 year, 4 months","timestamp":1611792226,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/448705362/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<TreeNode*> ans;\n    void pre_order(TreeNode* root){\n        if(root==nullptr) return;\n        ans.emplace_back(root);\n        pre_order(root->left);\n        pre_order(root->right);\n    }\n    void flatten(TreeNode* root) {\n        if(root=nullptr) return;\n        pre_order(root);\n        for(int i=0;i<ans.size()-1;i++){\n            ans[i]->left=nullptr;\n            ans[i]->right=ans[i+1];\n        }\n    }\n};","compare_result":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"flatten-binary-tree-to-linked-list"}