{"id":452657501,"lang":"cpp","time":"1 year, 4 months","timestamp":1612599552,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/452657501/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"10.4 MB","code":"class Solution {\npublic:\n    int lengthOfLIS(vector<int>& nums) {\n        vector<int> ca;\n        int m=nums.size();\n        ca.emplace_back(nums[0]);\n        for(int i=1;i<m;i++){\n            if(nums[i]>ca[ca.size()-1]){\n                ca.emplace_back(nums[i]);\n            }\n            else{\n                auto iter = lower_bound(ca.begin(),ca.end(),nums[i]);\n                (*iter)=nums[i];\n            }\n        }\n        return ca.size();\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence"}