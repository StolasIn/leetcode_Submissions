{"id":517177953,"lang":"cpp","time":"11 months, 3 weeks","timestamp":1625389990,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/517177953/","is_pending":"Not Pending","title":"Largest Divisible Subset","memory":"8.8 MB","code":"class Solution {\npublic:\n    vector<int> largestDivisibleSubset(vector<int>& nums) {\n        if(nums.size()==1){\n            return {nums[0]};\n        }\n        sort(nums.begin(),nums.end());\n        int m=nums.size();\n        int ma=-1;\n        vector<int> tmp(m,0);\n        vector<int> ind(m,-1);\n        vector<int> ans;\n        int t;\n        for(int i=1;i<m;i++){\n            for(int j=i-1;j>=0;j--){\n                if(nums[i]%nums[j]==0){\n                    if(tmp[i]<(tmp[j]+1)){\n                        tmp[i]=tmp[j]+1;\n                        ind[i]=j;\n                    }\n                }\n            }\n        }\n        for(int i=0;i<m;i++){\n            if(ma<tmp[i]){\n                ma=tmp[i];\n                t=i;\n            }\n        }\n        while(t>=0){\n            ans.emplace_back(nums[t]);\n            t=ind[t];\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"largest-divisible-subset"}