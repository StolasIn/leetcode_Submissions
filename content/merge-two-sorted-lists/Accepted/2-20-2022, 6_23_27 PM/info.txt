{"id":645212190,"lang":"cpp","time":"4Â months","timestamp":1645352607,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/645212190/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"15.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {\n        if(l1==nullptr && l2==nullptr){\n            return nullptr;\n        }\n        ListNode* ans = new ListNode();\n        auto head = ans;\n        while(l1!=nullptr || l2!=nullptr){\n            if(l1!=nullptr && l2!=nullptr){\n                if(l1->val<l2->val){\n                    ans->val = l1->val;\n                    l1=l1->next;\n                }\n                else{\n                    ans->val = l2->val;\n                    l2=l2->next;\n                }\n            }\n            else if(l1!=nullptr){\n                ans->val = l1->val;\n                l1=l1->next;\n            }\n            else{\n                ans->val = l2->val;\n                l2=l2->next;\n            }\n            if(l1!=nullptr || l2!=nullptr){\n                ans->next = new ListNode();\n                ans = ans->next;\n            }\n        }\n        return head;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists"}