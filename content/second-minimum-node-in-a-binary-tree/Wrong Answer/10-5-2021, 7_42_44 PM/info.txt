{"id":566184449,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1633434164,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/566184449/","is_pending":"Not Pending","title":"Second Minimum Node In a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> v;\n    void inorder(TreeNode* root){\n        if(root==nullptr) return;\n        inorder(root->left);\n        v.emplace_back(root->val);\n        inorder(root->right);\n    }\n    int findSecondMinimumValue(TreeNode* root) {\n        inorder(root);\n        int mi=*min_element(v.begin(),v.end());\n        int mi2=1e9;\n        for(int i=0;i<v.size();i++){\n            if(v[i]>mi && mi2>v[i]){\n                mi2=min(mi2,v[i]);\n            }\n        }\n        if(mi2=1e9) return -1;\n        return mi2;\n    }\n};","compare_result":"010110000100000000000000100000000000000","title_slug":"second-minimum-node-in-a-binary-tree"}