{"id":448741342,"lang":"cpp","time":"1 year, 4 months","timestamp":1611799662,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/448741342/","is_pending":"Not Pending","title":"Sum Root to Leaf Numbers","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> ans;\n    void dfs(TreeNode* root,vector<int>& str){\n        if(root==nullptr) return;\n        if(root->left==nullptr && root->right==nullptr) {\n            str.emplace_back(root->val);\n            ans.emplace_back(str);\n            str.pop_back();\n            return;\n        }\n        str.emplace_back(root->val);\n        dfs(root->left,str);\n        dfs(root->right,str);\n        str.pop_back();\n    }\n    int sumNumbers(TreeNode* root) {\n        if(root==nullptr) return 0;\n        \n        int sum=0;\n        int pro=1;\n        vector<int> o;\n        dfs(root,o);\n        for(int i=0;i<ans.size();i++){\n            pro=1;\n            for(int j=ans[i].size()-1;j>=0;j--){\n                sum+=pro*ans[i][j];\n                pro*=10;\n            }\n        }\n        return sum;\n    }\n};","compare_result":"11111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"sum-root-to-leaf-numbers"}