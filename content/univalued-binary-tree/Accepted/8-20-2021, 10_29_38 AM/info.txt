{"id":541219211,"lang":"cpp","time":"10Â months","timestamp":1629426578,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/541219211/","is_pending":"Not Pending","title":"Univalued Binary Tree","memory":"9.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int cmp;\n    bool dfs(TreeNode* root){\n        if(root==nullptr) return true;\n        return root->val==cmp && dfs(root->left) && dfs(root->right);\n    }\n    bool isUnivalTree(TreeNode* root) {\n        cmp=root->val;\n        return dfs(root);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"univalued-binary-tree"}