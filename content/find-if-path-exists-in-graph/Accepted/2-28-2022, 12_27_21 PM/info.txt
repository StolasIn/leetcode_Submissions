{"id":650340811,"lang":"cpp","time":"3 months, 3 weeks","timestamp":1646022441,"status_display":"Accepted","runtime":"484 ms","url":"/submissions/detail/650340811/","is_pending":"Not Pending","title":"Find if Path Exists in Graph","memory":"110.9 MB","code":"class dist{\npublic:\n    vector<int> par;\n    dist(int x){\n        par.assign(x,-1);\n    }\n    int find(int x){\n        int x1 = x;\n        while(par[x]>=0){\n            x = par[x];\n        }\n        int x2;\n        while(par[x1]>=0){\n            x2 = par[x1];\n            par[x1] = x;\n            x1 = x2;\n        }\n        return x;\n    }\n    bool union_n(int x,int y){\n        int m = find(x);\n        int n = find(y);\n        if(m!=-1 && m==n){\n            return true;\n        }\n        if(par[m]>par[n]){\n            par[n]+=par[m];\n            par[m] = n;\n        }\n        else{\n            par[m]+=par[n];\n            par[n] = m;\n        }\n        return false;\n    }\n};\nclass Solution {\npublic:\n    bool validPath(int n, vector<vector<int>>& e, int source, int dest) {\n        dist d = dist(n);\n        for(int i=0;i<e.size();i++){\n            d.union_n(e[i][0],e[i][1]);\n        }\n        return d.union_n(source,dest);\n    }\n};","compare_result":"1111111111111111111111111","title_slug":"find-if-path-exists-in-graph"}