{"id":558061024,"lang":"cpp","time":"9Â months","timestamp":1632145512,"status_display":"Accepted","runtime":"116 ms","url":"/submissions/detail/558061024/","is_pending":"Not Pending","title":"All Elements in Two Binary Search Trees","memory":"86.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> l,r;\n    void inorder(vector<int>& v,TreeNode* r){\n        if(r==nullptr){\n            return;\n        }\n        inorder(v,r->left);\n        v.emplace_back(r->val);\n        inorder(v,r->right);\n    }\n    vector<int> getAllElements(TreeNode* root1, TreeNode* root2) {\n        vector<int> l,r,ans;\n        int i=0,j=0;\n        inorder(l,root1);\n        inorder(r,root2);\n        while(i<l.size() || j<r.size()){\n            if(i==l.size()){\n                ans.emplace_back(r[j]);\n                j++;\n                continue;\n            }\n            else if(j==r.size()){\n                ans.emplace_back(l[i]);\n                i++;\n                continue;\n            }\n            if(l[i]<r[j]){\n                ans.emplace_back(l[i]);\n                i++;\n            }\n            else{\n                ans.emplace_back(r[j]);\n                j++;\n            }\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"all-elements-in-two-binary-search-trees"}