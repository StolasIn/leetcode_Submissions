{"id":531593037,"lang":"cpp","time":"10 months, 3 weeks","timestamp":1627825769,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/531593037/","is_pending":"Not Pending","title":"Possible Bipartition","memory":"N/A","code":"class Solution {\npublic:\n    vector<vector<int>> g;\n    vector<bool> vis;\n    bool flag;\n    void dfs(int now,int from){\n        if(vis[now]==true){\n            flag=true;\n            return;\n        }\n        vis[now]=true;\n        for(int i=0;i<g[now].size();i++){\n            if(g[now][i]==from) continue;\n            dfs(g[now][i],now);\n        }\n    }\n    bool possibleBipartition(int n, vector<vector<int>>& dis) {\n        g.resize(n+1);\n        vis.assign(n+1,false);\n        for(int i=0;i<dis.size();i++){\n            g[dis[i][0]].emplace_back(dis[i][1]);\n            g[dis[i][1]].emplace_back(dis[i][0]);\n        }\n        flag=false;\n        for(int i=1;i<=n;i++){\n            if(flag) return false;\n            if(vis[i]==false){\n                dfs(i,-1);\n            }\n        }\n        return true;\n    }\n};","compare_result":"1111111111110111010101010101010101010101010101010101010101010101010101","title_slug":"possible-bipartition"}