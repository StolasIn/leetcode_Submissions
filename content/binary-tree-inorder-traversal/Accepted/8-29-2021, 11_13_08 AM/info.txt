{"id":545900908,"lang":"java","time":"9 months, 3 weeks","timestamp":1630206788,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/545900908/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"39.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    ArrayList<Integer> ans = new ArrayList<Integer>();\n    void inorder(TreeNode root){\n        if(root==null){\n            return;\n        }\n        inorder(root.left);\n        ans.add(root.val);\n        inorder(root.right);\n    }\n    public List<Integer> inorderTraversal(TreeNode root) {\n        inorder(root);\n        return ans;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal"}