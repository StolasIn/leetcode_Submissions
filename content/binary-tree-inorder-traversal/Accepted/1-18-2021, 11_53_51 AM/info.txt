{"id":444390711,"lang":"cpp","time":"1 year, 5 months","timestamp":1610942031,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/444390711/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"8.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> ans;\n    void inorder(TreeNode* ptr){\n        if(ptr!=nullptr){\n            inorder(ptr->left);\n            ans.push_back(ptr->val);\n            inorder(ptr->right);\n        }\n    }\n    vector<int> inorderTraversal(TreeNode* root) {\n        inorder(root);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal"}