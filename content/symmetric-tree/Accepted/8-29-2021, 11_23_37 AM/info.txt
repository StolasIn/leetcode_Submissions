{"id":545907542,"lang":"java","time":"9 months, 3 weeks","timestamp":1630207417,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/545907542/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"39 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean dfs(TreeNode l,TreeNode r){\n        if(l==r) return true;\n        if(l==null || r==null) return false;\n        if(l.val!=r.val) return false;\n        return dfs(l.left,r.right) && dfs(l.right,r.left);\n    }\n    public boolean isSymmetric(TreeNode root) {\n        return dfs(root.left,root.right);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}