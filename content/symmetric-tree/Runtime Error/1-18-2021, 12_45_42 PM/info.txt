{"id":444409931,"lang":"cpp","time":"1 year, 5 months","timestamp":1610945142,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/444409931/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool is_symmetic(TreeNode* root){\n        if((!root->left && root->right) || (root->left && !root->right)) return false;\n        else if(!root->left && !root->right){\n            return true;\n        }\n        else{\n            return is_symmetic(root->left)+is_symmetic(root->right);\n        }\n    }\n    bool isSymmetric(TreeNode* root) {\n        return is_symmetic(root);\n    }\n};","compare_result":"111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"symmetric-tree"}