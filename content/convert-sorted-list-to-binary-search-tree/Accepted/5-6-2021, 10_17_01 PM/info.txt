{"id":489644027,"lang":"cpp","time":"1 year, 1 month","timestamp":1620310621,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/489644027/","is_pending":"Not Pending","title":"Convert Sorted List to Binary Search Tree","memory":"31.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* re(TreeNode* now,vector<int>& v,int l,int r){\n        if(r<l) return nullptr;\n        if(r==l){\n            now=new TreeNode();\n            now->val=v[l];\n            return now;\n        }\n        int mid=(r-l)/2+l;\n        if(now==nullptr){\n            now=new TreeNode();\n        }\n        now->val=v[mid];\n        now->left=re(now->left,v,l,mid-1);\n        now->right=re(now->right,v,mid+1,r);\n        return now;\n     }\n    TreeNode* sortedListToBST(ListNode* head) {\n        vector<int> v;\n        auto tmp = head;\n        while(tmp!=nullptr){\n            v.emplace_back(tmp->val);\n            tmp=tmp->next;\n        }\n        TreeNode* t=new TreeNode();\n        return re(t,v,0,v.size()-1);\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"convert-sorted-list-to-binary-search-tree"}