{"id":521319854,"lang":"cpp","time":"11 months, 2 weeks","timestamp":1626096090,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/521319854/","is_pending":"Not Pending","title":"Insert into a Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* insert(TreeNode* root, int val){\n        if(root==nullptr){\n            TreeNode* node=new TreeNode(val);\n            return node;\n        }\n        else if(root->val<val){\n            root->right=insert(root->right,val);\n        }\n        else{\n            root->left=insert(root->left,val);\n        }\n        return root;\n    }\n    TreeNode* insertIntoBST(TreeNode* root, int val) {\n        insert(root,val);\n        return root;\n    }\n};","compare_result":"11111111011111111111111111111111111","title_slug":"insert-into-a-binary-search-tree"}