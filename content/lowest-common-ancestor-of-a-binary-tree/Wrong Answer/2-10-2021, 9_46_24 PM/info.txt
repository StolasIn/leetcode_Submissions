{"id":454438490,"lang":"cpp","time":"1 year, 4 months","timestamp":1612964784,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/454438490/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<TreeNode*>> ans; \n    void find(TreeNode* root, TreeNode* p,vector<TreeNode*>& now){\n        if(root==nullptr) return;\n        if(root==p){\n            now.emplace_back(root);\n            ans.emplace_back(now);\n            now.pop_back();\n        }\n        now.emplace_back(root);\n        find(root->left,p,now);\n        find(root->right,p,now);\n        now.pop_back();\n    }\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        vector<TreeNode*> now;\n        find(root,p,now);\n        now.clear();\n        find(root,q,now);\n        int m=min(ans[0].size(),ans[1].size());\n        for(int i=0;i<m;i++){\n            if(ans[0][i]->val!=ans[1][i]->val){\n                p=ans[0][i-1];\n                break;\n            }\n        }\n        return p;\n    }\n};","compare_result":"1110101101101001111111111011111","title_slug":"lowest-common-ancestor-of-a-binary-tree"}