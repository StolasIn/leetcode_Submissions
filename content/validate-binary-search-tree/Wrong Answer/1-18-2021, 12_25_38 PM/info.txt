{"id":444402189,"lang":"cpp","time":"1 year, 5 months","timestamp":1610943938,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/444402189/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool is_valid(TreeNode* root,long long low,long long high){\n        if(root->left && root->val>root->left->val && root->right && root->val<root->right->val){\n            return is_valid(root->left,low,root->val) && is_valid(root->right,root->val,high);\n        }\n        else if(root->left && root->val>root->left->val && !root->right){\n            return is_valid(root->left,low,root->val);\n        }\n        else if(!root->left && root->right && root->val<root->right->val){\n            return is_valid(root->right,root->val,high);\n        }\n        else if(!root->left && !root->right){\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n    bool isValidBST(TreeNode* root) {\n        return is_valid(root,-4000000000,4000000000);\n    }\n};","compare_result":"11111111110010010011111111111111111111111111111111111111111111111111111011110","title_slug":"validate-binary-search-tree"}