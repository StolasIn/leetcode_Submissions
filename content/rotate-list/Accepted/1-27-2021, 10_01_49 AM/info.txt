{"id":448295388,"lang":"cpp","time":"1 year, 4 months","timestamp":1611712909,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/448295388/","is_pending":"Not Pending","title":"Rotate List","memory":"11.8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* rotateRight(ListNode* head, int k) {\n        if(k==0) return head;\n        if(head==nullptr) return head;\n        auto tmp = head;\n        int cnt=0;\n        for(;tmp->next!=nullptr;tmp=tmp->next){\n            cnt++;\n        }\n        tmp->next=head;\n        cnt++;\n        k%=cnt;\n        tmp=head;\n        k=cnt-k-1;\n        for(int i=0;i<k;i++){\n            tmp=tmp->next;\n        }\n        head=tmp->next;\n        tmp->next=nullptr;\n        return head;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotate-list"}