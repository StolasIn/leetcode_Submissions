{"id":650954159,"lang":"cpp","time":"3 months, 3 weeks","timestamp":1646104981,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/650954159/","is_pending":"Not Pending","title":"Simplify Path","memory":"12 MB","code":"class Solution {\npublic:\n    vector<string> split(const string& str, const string& delim) {\n        vector<string> res;\n        if(\"\" == str) return res;\n        char * strs = new char[str.length() + 1] ;\n        strcpy(strs, str.c_str()); \n        char * d = new char[delim.length() + 1];\n        strcpy(d, delim.c_str());\n        char *p = strtok(strs, d);\n        while(p) {\n            string s = p;\n            res.push_back(s);\n            p = strtok(NULL, d);\n        }\n        return res;\n    }\n    string simplifyPath(string path) {\n        string d = \"/\";\n        vector<string> v = split(path,d);\n        stack<string> st;\n        string ans = \"\";\n        for(int i=0;i<v.size();i++){\n            if(v[i]==\"..\" && !st.empty()){\n                st.pop();\n            }\n            else if(v[i]!=\"..\" && v[i]!=\".\"){\n                st.push(v[i]);\n            }\n        }\n        while(!st.empty()){\n            ans = \"/\" + st.top() + ans;\n            st.pop();\n        }\n        return ans==\"\" ? \"/\" : ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"simplify-path"}