{"id":551333255,"lang":"cpp","time":"9 months, 2 weeks","timestamp":1631080949,"status_display":"Accepted","runtime":"156 ms","url":"/submissions/detail/551333255/","is_pending":"Not Pending","title":"Maximum Level Sum of a Binary Tree","memory":"104.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> arr;\n    void re(TreeNode* r,int l){\n        if(r==nullptr){\n            return;\n        }\n        if(l==arr.size()){\n            arr.emplace_back(r->val);\n        }\n        else{\n            arr[l]+=r->val;\n        }\n        re(r->left,l+1);\n        re(r->right,l+1);\n    }\n    int maxLevelSum(TreeNode* root) {\n        re(root,0);\n        return max_element(arr.begin(),arr.end())-arr.begin()+1;\n    }\n};","compare_result":"1111111111111111111111111111111111111111","title_slug":"maximum-level-sum-of-a-binary-tree"}