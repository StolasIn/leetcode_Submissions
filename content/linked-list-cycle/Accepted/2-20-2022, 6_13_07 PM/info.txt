{"id":645207755,"lang":"cpp","time":"4Â months","timestamp":1645351987,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/645207755/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        ListNode* slow = head;\n        ListNode* fast = head;\n        while(fast!=nullptr && fast->next!=nullptr){\n            slow = slow->next;\n            fast = fast->next->next;\n            if(slow == fast){\n                return true;\n            }\n        }\n        return false;\n    }\n};","compare_result":"111111111111111111111","title_slug":"linked-list-cycle"}