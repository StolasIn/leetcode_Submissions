{"id":545935416,"lang":"java","time":"9 months, 3 weeks","timestamp":1630210360,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/545935416/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"42.9 MB","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public boolean hasCycle(ListNode head) {\n        if(head==null) return false;\n        ListNode slow = head;\n        ListNode fast = head;\n        while(fast!=null && fast.next!=null){\n            slow=slow.next;\n            fast=fast.next.next;\n            if(slow==fast){\n                return true;\n            }\n        }\n        return false;\n    }\n}","compare_result":"11111111111111111111","title_slug":"linked-list-cycle"}