{"id":447631807,"lang":"cpp","time":"1 year, 4 months","timestamp":1611581749,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/447631807/","is_pending":"Not Pending","title":"Merge Two Binary Trees","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* merge1(TreeNode* t1, TreeNode* t2){\n        if(t1==nullptr && t2==nullptr) return nullptr;\n        else if(t1==nullptr) return t2;\n        else if(t2==nullptr) return t1;\n        else t1->val+=t2->val;\n        t1->left=merge1(t1->left,t2->left);\n        t1->right=merge1(t1->right,t2->right);\n        return t1;\n    }\n    TreeNode* mergeTrees(TreeNode* t1, TreeNode* t2) {\n        merge1(t1,t2);\n        return t1;\n    }\n};","compare_result":"111011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-binary-trees"}