{"id":449347820,"lang":"cpp","time":"1 year, 4 months","timestamp":1611926405,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/449347820/","is_pending":"Not Pending","title":"Implement Queue using Stacks","memory":"6.9 MB","code":"class MyQueue {\npublic:\n    /** Initialize your data structure here. */\n    stack<int> s1;\n    stack<int> s2;\n    MyQueue() {\n        \n    }\n    \n    /** Push element x to the back of queue. */\n    void push(int x) {\n        s1.push(x);\n    }\n    \n    /** Removes the element from in front of queue and returns that element. */\n    int pop() {\n        if(s2.empty()==true){\n            while(s1.empty()==false){\n                s2.push(s1.top());\n                s1.pop();\n            }\n        }\n        int tmp=s2.top();\n        s2.pop();\n        return tmp;\n    }\n    \n    /** Get the front element. */\n    int peek() {\n        if(s2.empty()==true){\n            while(s1.empty()==false){\n                s2.push(s1.top());\n                s1.pop();\n            }\n        }\n        return s2.top();\n    }\n    \n    /** Returns whether the queue is empty. */\n    bool empty() {\n        return s1.size()==0 && s2.size()==0;\n    }\n};\n\n/**\n * Your MyQueue object will be instantiated and called as such:\n * MyQueue* obj = new MyQueue();\n * obj->push(x);\n * int param_2 = obj->pop();\n * int param_3 = obj->peek();\n * bool param_4 = obj->empty();\n */","compare_result":"11111111111111111111","title_slug":"implement-queue-using-stacks"}