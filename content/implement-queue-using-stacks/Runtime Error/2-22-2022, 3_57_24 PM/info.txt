{"id":646617385,"lang":"cpp","time":"3 months, 4 weeks","timestamp":1645516644,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/646617385/","is_pending":"Not Pending","title":"Implement Queue using Stacks","memory":"N/A","code":"class MyQueue {\npublic:\n    stack<int> st1;\n    stack<int> st2;\n    MyQueue() {\n    }\n    \n    void push(int x) {\n        st1.push(x);\n        if(st2.size()==0){\n            st2.push(x);\n        }\n    }\n    \n    int pop() {\n        int t;\n        int t1;\n        st2.pop();\n        while(!st1.empty()){\n            st2.push(st1.top());\n            st1.pop();\n        }\n        t = st2.top();\n        st2.pop();\n        if(!st2.empty()){\n            t1 = st2.top();\n        }\n        while(!st2.empty()){\n            st1.push(st2.top());\n            st2.pop();\n        }\n        if(!st2.empty()){\n            st2.push(t1);\n        }\n        return t;\n    }\n    \n    int peek() {\n        return st2.top();\n    }\n    \n    bool empty() {\n        return st1.empty();\n    }\n};\n\n/**\n * Your MyQueue object will be instantiated and called as such:\n * MyQueue* obj = new MyQueue();\n * obj->push(x);\n * int param_2 = obj->pop();\n * int param_3 = obj->peek();\n * bool param_4 = obj->empty();\n */","compare_result":"1111111000000000000000","title_slug":"implement-queue-using-stacks"}