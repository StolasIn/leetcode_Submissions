{"id":448945240,"lang":"cpp","time":"1 year, 4 months","timestamp":1611839695,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/448945240/","is_pending":"Not Pending","title":"Insertion Sort List","memory":"9.8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* insertionSortList(ListNode* head) {\n        auto ptr=head;\n        vector<int> ans;\n        while(ptr!=nullptr){\n            ans.emplace_back(ptr->val);\n            ptr=ptr->next;\n        }\n        sort(ans.begin(),ans.end());\n        ptr=head;\n        for(int i=0;ptr!=nullptr;i++){\n            ptr->val=ans[i];\n            ptr=ptr->next;\n        }\n        return head;\n    }\n};","compare_result":"1111111111111111111111","title_slug":"insertion-sort-list"}