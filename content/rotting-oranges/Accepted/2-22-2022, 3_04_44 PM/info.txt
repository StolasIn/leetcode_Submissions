{"id":646588626,"lang":"cpp","time":"3 months, 4 weeks","timestamp":1645513484,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/646588626/","is_pending":"Not Pending","title":"Rotting Oranges","memory":"13.4 MB","code":"struct node{\n    int x;\n    int y;\n    int s;\n};\nclass Solution {\npublic:\n    int orangesRotting(vector<vector<int>>& g) {\n        int m = g.size();\n        int n = g[0].size();\n        queue<node> q;\n        int dir[4][2] = {{-1,0},{0,-1},{1,0},{0,1}};\n        int ans = 0;\n        int cnt = 0;\n        for(int i=0;i<m;i++){\n            for(int j=0;j<n;j++){\n                if(g[i][j]==2){\n                    q.push(node{i,j,0});\n                    g[i][j] = 1;\n                    cnt++;\n                }\n                else if(g[i][j]==1){\n                    cnt++;\n                }\n            }\n        }\n        while(!q.empty()){\n            auto t = q.front();\n            q.pop();\n            if(t.x<0 || t.y<0 || t.x>=m || t.y>=n){\n                continue;\n            }\n            if(g[t.x][t.y]!=1){\n                continue;\n            }\n            g[t.x][t.y] = 2;\n            cnt--;\n            ans = max(ans,t.s);\n            for(int i=0;i<4;i++){\n                q.push(node{t.x+dir[i][0],t.y+dir[i][1],t.s+1});\n            }\n        }\n        return cnt==0 ? ans : -1;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotting-oranges"}