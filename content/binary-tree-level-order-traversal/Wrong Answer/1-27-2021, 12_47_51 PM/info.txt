{"id":448359168,"lang":"cpp","time":"1 year, 4 months","timestamp":1611722871,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/448359168/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        deque<TreeNode*> de;\n        vector<vector<int>> ans;\n        if(root==nullptr) return ans;\n        vector<int> now;\n        int cnt1=0;\n        int cnt2=-1;\n        int pro=1;\n        de.push_back(root);\n        while(de.empty()==false){\n            auto tmp=de.front();\n            now.emplace_back(tmp->val);\n            de.pop_front();\n            cnt1++;\n            if(cnt1>=pro){\n                ans.emplace_back(now);\n                now.clear();\n                pro*=2;\n                cnt1=0;\n            }\n            if(tmp->left!=nullptr){\n                de.push_back(tmp->left);\n            }\n            else{\n                cnt1++;\n            }\n            if(tmp->right!=nullptr){\n                de.push_back(tmp->right);\n            }\n            else{\n                cnt1++;\n            }\n        }\n        return ans;\n    }\n};","compare_result":"1111111100000000000000000000000000","title_slug":"binary-tree-level-order-traversal"}