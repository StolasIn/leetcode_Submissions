{"id":496020847,"lang":"cpp","time":"1 year, 1 month","timestamp":1621560509,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/496020847/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"12.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        if(root==nullptr) return vector<vector<int>>();\n        queue<TreeNode*> q;\n        q.push(root);\n        vector<int> level;\n        vector<vector<int>> ans;\n        while(!q.empty()){\n            level=vector<int>();\n            int m=q.size();\n            for(int i=0;i<m;i++){\n                auto tmp = q.front();\n                level.emplace_back(tmp->val);\n                q.pop();\n                if(tmp->left!=nullptr) q.push(tmp->left);\n                if(tmp->right!=nullptr) q.push(tmp->right);\n            }\n            ans.emplace_back(level);\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal"}