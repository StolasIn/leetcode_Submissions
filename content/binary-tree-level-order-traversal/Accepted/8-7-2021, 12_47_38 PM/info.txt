{"id":534523681,"lang":"cpp","time":"10 months, 2 weeks","timestamp":1628311658,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/534523681/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"12.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nstruct node{\n    TreeNode* n;\n    int v;\n};\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        queue<node> q;\n        vector<vector<int>> ans;\n        q.push(node{root,0});\n        while(!q.empty()){\n            auto t = q.front();\n            q.pop();\n            if(t.n==nullptr) continue;\n            if(t.v>=ans.size()){\n                ans.emplace_back(vector<int>());\n            }\n            ans[t.v].emplace_back(t.n->val);\n            q.push(node{t.n->left,t.v+1});\n            q.push(node{t.n->right,t.v+1});\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal"}