{"id":545945797,"lang":"java","time":"9 months, 3 weeks","timestamp":1630211840,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/545945797/","is_pending":"Not Pending","title":"Min Stack","memory":"40.7 MB","code":"class MinStack {\n\n    /** initialize your data structure here. */\n    Stack st1 = new Stack();\n    Stack st2 = new Stack();\n    public MinStack() {\n        \n    }\n    \n    public void push(int val) {\n        st1.push(val);\n        if(st2.size()==0 || val<=(int)st2.peek()){\n            st2.push(val);\n        }\n    }\n    \n    public void pop() {\n        if((int)st1.peek()==(int)st2.peek()){\n            st1.pop();\n            st2.pop();\n        }\n        else{\n            st1.pop();\n        }\n    }\n    \n    public int top() {\n        return (int)st1.peek();\n    }\n    \n    public int getMin() {\n        return (int)st2.peek();\n    }\n}\n\n/**\n * Your MinStack object will be instantiated and called as such:\n * MinStack obj = new MinStack();\n * obj.push(val);\n * obj.pop();\n * int param_3 = obj.top();\n * int param_4 = obj.getMin();\n */","compare_result":"1111111111111111111111111111111","title_slug":"min-stack"}