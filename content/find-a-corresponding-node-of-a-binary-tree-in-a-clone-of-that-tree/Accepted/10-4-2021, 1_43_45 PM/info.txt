{"id":565473597,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1633326225,"status_display":"Accepted","runtime":"936 ms","url":"/submissions/detail/565473597/","is_pending":"Not Pending","title":"Find a Corresponding Node of a Binary Tree in a Clone of That Tree","memory":"164.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n\nclass Solution {\npublic:\n    vector<bool> v;\n    vector<bool> ans;\n    void dfs(TreeNode* r,TreeNode* tar){\n        if(r==nullptr) return;\n        if(r==tar){\n            ans.assign(v.begin(),v.end());\n            return;\n        }\n        v.emplace_back(true);\n        dfs(r->left,tar);\n        v.pop_back();\n        v.emplace_back(false);\n        dfs(r->right,tar);\n        v.pop_back();\n    }\n    TreeNode* getTargetCopy(TreeNode* o, TreeNode* c, TreeNode* t) {\n        dfs(o,t);\n        for(int i=0;i<ans.size();i++){\n            if(ans[i]){\n                c=c->left;\n            }\n            else{\n                c=c->right;\n            }\n        }\n        return c;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree"}