{"id":502157502,"lang":"cpp","time":"1Â year","timestamp":1622684786,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/502157502/","is_pending":"Not Pending","title":"Interleaving String","memory":"N/A","code":"class Solution {\npublic:\n    string c1,c2,cm;\n    bool re(int x,int y,int z){\n        if(z==cm.size()){\n            return true;\n        }\n        if(x>=c1.size() && y>=c2.size()){\n            return false;\n        }\n        if(x>=c1.size()){\n            return c2[y]==cm[z]? re(x,y+1,z+1):false;\n        }\n        if(y>=c2.size()){\n            return c1[x]==cm[z]? re(x+1,y,z+1):false;\n        }\n        //printf(\"%d %d %d %c %c %c\\n\",x,y,z,c1[x],c2[y],cm[z]);\n        if(c1[x]!=cm[z] && c2[y]!=cm[z]){\n            return false;\n        }\n        if(c1[x]==cm[z] && c2[y]==cm[z]){\n            return re(x+1,y,z+1)|re(x,y+1,z+1);\n        }\n        else if(c1[x]==cm[z]){\n            return re(x+1,y,z+1);\n        }\n        else if(c2[y]==cm[z]){\n            return re(x,y+1,z+1);\n        }\n        return false;\n    }\n    bool isInterleave(string s1, string s2, string s3) {\n        c1=s1;\n        c2=s2;\n        cm=s3;\n        return re(0,0,0);\n    }\n};","compare_result":"11111111100111111111111111011011111111111111111111111111111111111111111111111111111111111111100000000000","title_slug":"interleaving-string"}