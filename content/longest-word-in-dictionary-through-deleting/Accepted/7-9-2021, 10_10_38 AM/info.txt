{"id":519565281,"lang":"cpp","time":"11 months, 2 weeks","timestamp":1625796638,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/519565281/","is_pending":"Not Pending","title":"Longest Word in Dictionary through Deleting","memory":"16.6 MB","code":"/**\nMy Solution 3\n\nCreate a jump table to make subsequence check through s faster.\n*/\nclass Solution {\npublic:\n    std::string findLongestWord(std::string s, std::vector<std::string>& dictionary) {\n        const auto slen = s.length();\n\n        /** Build a 2D array of m[slen][26] where\n            m[i][c] means the next location of character c\n            from index i in s.\n        */\n\n        std::vector<std::vector<int>> m(slen, std::vector<int>(26, slen));\n\n        for ( int i = s.size()-1; i >= 0; --i ) {\n            m[i][s[i]-'a'] = i;\n            if ( i > 0 ) {\n                for ( int c = 0; c < 26; ++ c )\n                    m[i-1][c] = m[i][c];\n            }\n        }\n\n        std::string res;\n\n        for ( const auto& w : dictionary ) {\n            const auto wlen = w.length();\n\n            int idx = 0;\n            int i = 0;\n\n            while ( i < wlen ) {\n                if ( idx == slen or m[idx][w[i]-'a'] == slen )\n                    break;\n\n                idx = ( m[idx][w[i]-'a'] + 1 );\n                ++i;\n            }\n\n            if ( i == wlen ) {\n                if ( wlen > res.length() or ( wlen == res.length() and w < res ) )\n                    res = w;\n            }\n        }\n\n        return res;\n    }\n};\n\n// fast IO\nstatic char __ = []() -> char {\n    std::ios_base::sync_with_stdio(false);\n    std::cin.tie(NULL);\n    std::cout.tie(NULL);\n    return '\\0';\n}();","compare_result":"1111111111111111111111111111111","title_slug":"longest-word-in-dictionary-through-deleting"}