{"id":449263797,"lang":"cpp","time":"1 year, 4 months","timestamp":1611903634,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/449263797/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> rightSideView(TreeNode* root) {\n        vector<int> ans;\n        while(root!=nullptr){\n            ans.emplace_back(root->val);\n            if(root->right!=nullptr) root=root->right;\n            else root=root->left;\n        }\n        return ans;\n    }\n};","compare_result":"1111110011101101111101101001111111111111111011110001111100101101111111111111011111110111111101110011011011101110111110001011001010110101111100101100111101111011111111010110111101101101110111111111110011001001010","title_slug":"binary-tree-right-side-view"}