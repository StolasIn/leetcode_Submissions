{"id":449265704,"lang":"cpp","time":"1 year, 4 months","timestamp":1611903982,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/449265704/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"12 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> rightSideView(TreeNode* root) {\n      deque<pair<TreeNode*,int>> de;\n        vector<vector<int>> ans;\n        vector<int> ans1;\n        if(root==nullptr) return ans1;\n        vector<pair<int,int>> now;\n        de.push_back(pair<TreeNode*,int>(root,0));\n        while(de.empty()==false){\n            auto tmp=de.front();\n            now.emplace_back(pair<int,int>(tmp.first->val,tmp.second));\n            de.pop_front();\n            if(tmp.first->left!=nullptr){\n                de.push_back(pair<TreeNode*,int>(tmp.first->left,tmp.second+1));\n            }\n            if(tmp.first->right!=nullptr){\n                de.push_back(pair<TreeNode*,int>(tmp.first->right,tmp.second+1));\n            }\n        }\n        ans.resize(now[now.size()-1].second+1);\n        for(int i=0;i<now.size();i++){\n            ans[now[i].second].emplace_back(now[i].first);\n        }\n        for(int i=0;i<ans.size();i++){\n            ans1.emplace_back(ans[i][ans[i].size()-1]);\n        }\n        return ans1;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view"}