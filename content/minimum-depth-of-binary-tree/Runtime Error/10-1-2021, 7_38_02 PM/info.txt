{"id":563971708,"lang":"cpp","time":"8 months, 3 weeks","timestamp":1633088282,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/563971708/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nstruct node{\n    TreeNode* p;\n    int d;\n};\nclass Solution {\npublic:\n    int minDepth(TreeNode* root) {\n        int l;\n        queue<node> q;\n        q.push(node{root,0});\n        node tmp;\n        while(!q.empty()){\n            tmp = q.front();\n            q.pop();\n            if(tmp.p->left==nullptr && tmp.p->right==nullptr){\n                return tmp.d+1;\n            }\n            else{\n                if(tmp.p->left!=nullptr) q.push(node{tmp.p->left,tmp.d+1});\n                if(tmp.p->right!=nullptr) q.push(node{tmp.p->right,tmp.d+1});\n            }\n        }\n        return 0;\n    }\n};","compare_result":"1100000000000000000000000000000000000000000000000000","title_slug":"minimum-depth-of-binary-tree"}