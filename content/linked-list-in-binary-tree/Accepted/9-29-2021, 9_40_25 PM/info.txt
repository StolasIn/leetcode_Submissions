{"id":562948625,"lang":"cpp","time":"8 months, 3 weeks","timestamp":1632922825,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/562948625/","is_pending":"Not Pending","title":"Linked List in Binary Tree","memory":"34.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    unordered_set<TreeNode*> s;\n    int tag;\n    bool flag;\n    void dfs(TreeNode* r){\n        if(r==nullptr) return;\n        if(r->val==tag){\n            s.insert(r);\n        }\n        dfs(r->left);\n        dfs(r->right);\n    }\n    void trase(ListNode* head, TreeNode* root){\n        if(head==nullptr){\n            flag=true;\n            return;\n        }\n        if(root==nullptr) return;\n        if(head->val==root->val){\n            trase(head->next,root->left);\n            trase(head->next,root->right);\n        }\n        else{\n            return;\n        }\n    }\n    bool isSubPath(ListNode* head, TreeNode* root) {\n        tag=head->val;\n        dfs(root);\n        flag=false;\n        for(auto i : s){\n            trase(head,i);\n            if(flag) return true;\n        }\n        return false;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"linked-list-in-binary-tree"}