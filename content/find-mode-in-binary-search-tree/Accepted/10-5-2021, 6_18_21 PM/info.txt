{"id":566161219,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1633429101,"status_display":"Accepted","runtime":"35 ms","url":"/submissions/detail/566161219/","is_pending":"Not Pending","title":"Find Mode in Binary Search Tree","memory":"25.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    unordered_map<int,int> map;\n    void inorder(TreeNode* root){\n        if(root==nullptr) return;\n        inorder(root->left);\n        map[root->val]++;\n        inorder(root->right);\n    }\n    vector<int> findMode(TreeNode* root) {\n        vector<int> ans;\n        inorder(root);\n        int ma=-1;\n        for(auto& i : map){\n            ma=max(ma,i.second);\n        }\n        for(auto& i : map){\n            if(ma==i.second){\n                ans.emplace_back(i.first);\n            }\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111","title_slug":"find-mode-in-binary-search-tree"}