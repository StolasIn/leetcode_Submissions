{"id":449668935,"lang":"cpp","time":"1 year, 4 months","timestamp":1612004483,"status_display":"Accepted","runtime":"356 ms","url":"/submissions/detail/449668935/","is_pending":"Not Pending","title":"Range Sum Query - Mutable","memory":"150.8 MB","code":"class NumArray {\npublic:\n    vector<int> fenwick;\n    vector<int> sto;\n    int m;\n    NumArray(vector<int>& nums) {\n        if(nums.empty()==true) return;\n        m=nums.size();\n        int tmp;\n        sto.assign(nums.begin(),nums.end());\n        fenwick.resize(m+1);\n        for(int i=0;i<m;i++){\n            up(i,nums[i]);\n        }\n    }\n    void update(int index, int val) {\n        int tmp=val-sto[index];\n        sto[index]=val;\n        up(index,tmp);\n    }\n    void up(int i, int diff) {\n    ++i;\n    while (i <= m) {\n      fenwick[i] += diff;\n      i += (i & -i);\n    }\n  }\n    int sum(int ind){\n        int sum=0;\n        while(ind>=1){\n            sum+=fenwick[ind];\n            ind-=(ind&(-ind));\n        }\n        return sum;\n    }\n    int sumRange(int left, int right) {\n        if(sto.empty()==true) return 0;\n        if(left==0){\n            return sum(right+1);\n        }\n        else{\n            return sum(right+1)-sum(left);\n        }\n    }\n};\n\n/**\n * Your NumArray object will be instantiated and called as such:\n * NumArray* obj = new NumArray(nums);\n * obj->update(index,val);\n * int param_2 = obj->sumRange(left,right);\n */","compare_result":"111111111111111","title_slug":"range-sum-query-mutable"}