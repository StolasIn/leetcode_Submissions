{"id":449669492,"lang":"cpp","time":"1 year, 4 months","timestamp":1612004652,"status_display":"Accepted","runtime":"356 ms","url":"/submissions/detail/449669492/","is_pending":"Not Pending","title":"Range Sum Query - Mutable","memory":"150.5 MB","code":"class NumArray {\n public:\n  NumArray(vector<int>& nums) {\n    nums_ = nums;\n    n_ = nums.size();\n    tree_ = vector<int>(n_ + 1, 0);\n    for (int i = 0; i < n_; i++) {\n      updateInternal(i, nums[i]);\n    }\n  }\n\n  void update(int i, int val) {\n    int diff = val - nums_[i];\n    nums_[i] = val;\n    updateInternal(i, diff);\n  }\n\n  void updateInternal(int i, int diff) {\n    ++i;\n    while (i <= n_) {\n      tree_[i] += diff;\n      i += (i & -i);\n    }\n  }\n\n  int sumRange(int i, int j) { return sum(j) - sum(i - 1); }\n  int sum(int i) {\n    ++i;\n    int sum = 0;\n    while (i > 0) {\n      sum += tree_[i];\n      i -= (i & -i);\n    }\n    return sum;\n  }\n\n private:\n  vector<int> tree_;\n  vector<int> nums_;\n  int n_;\n};","compare_result":"111111111111111","title_slug":"range-sum-query-mutable"}