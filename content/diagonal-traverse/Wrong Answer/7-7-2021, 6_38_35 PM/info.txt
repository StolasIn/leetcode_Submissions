{"id":518722689,"lang":"cpp","time":"11 months, 2 weeks","timestamp":1625654315,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/518722689/","is_pending":"Not Pending","title":"Diagonal Traverse","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> findDiagonalOrder(vector<vector<int>>& mat) {\n        int l=0,r=0;\n        int cnt=1;\n        vector<int> ans;\n        int m=mat.size();\n        for(int i=0;i<m;i++){\n            int l1=l,r1=r;\n            if(cnt%2==0){\n                while(l1>=0 && r1>=0 && l1<m && r1<m){\n                    ans.emplace_back(mat[l1][r1]);\n                    l1++;\n                    r1--;\n                }\n            }\n            else{\n                swap(l1,r1);\n                while(l1>=0 && r1>=0 && l1<m && r1<m){\n                    ans.emplace_back(mat[l1][r1]);\n                    l1--;\n                    r1++;\n                }\n            }\n            r++;\n            cnt++;\n        }\n        l=1,r=m-1;\n        for(int i=0;i<m-1;i++){\n            int l1=l,r1=r;\n            if(cnt%2==0){\n                while(l1>=0 && r1>=0 && l1<m && r1<m){\n                    ans.emplace_back(mat[l1][r1]);\n                    l1++;\n                    r1--;\n                }\n            }\n            else{\n                swap(l1,r1);\n                while(l1>=0 && r1>=0 && l1<m && r1<m){\n                    ans.emplace_back(mat[l1][r1]);\n                    l1--;\n                    r1++;\n                }\n            }\n            l++;\n            cnt++;\n        }\n        return ans;\n    }\n};","compare_result":"11100000000000000000000000000000","title_slug":"diagonal-traverse"}