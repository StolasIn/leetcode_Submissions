{"id":520681729,"lang":"cpp","time":"11 months, 2 weeks","timestamp":1625989217,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/520681729/","is_pending":"Not Pending","title":"Number of Longest Increasing Subsequence","memory":"N/A","code":"class Solution {\npublic:\n    int findNumberOfLIS(vector<int>& nums) {\n        int m=nums.size();\n        vector<int> v;\n        int ch[m];\n        memset(ch,0,sizeof(ch));\n        v.emplace_back(nums[0]);\n        for(int i=1;i<m;i++){\n            if(v.back()<nums[i]){\n                v.emplace_back(nums[i]);\n            }\n            else{\n                int tmp=lower_bound(v.begin(),v.end(),nums[i])-v.begin();\n                v[tmp]=nums[i];\n                ch[tmp]++;\n            }\n        }\n        int ans=1;\n        for(int i=0;i<m;i++){\n            if(ch[i]!=0) ans*=ch[i]+1;\n        }\n        return ans;\n    }\n};","compare_result":"1101111111110111110111101110111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"number-of-longest-increasing-subsequence"}