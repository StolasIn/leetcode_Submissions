{"id":566176027,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1633432323,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/566176027/","is_pending":"Not Pending","title":"Construct String from Binary Tree","memory":"27.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    string ans;\n    string re(TreeNode* root){\n        if(root==nullptr) return \"\";\n        string str;\n        if(root->left==nullptr && root->right==nullptr){\n            return to_string(root->val);\n        }\n        else if(root->left==nullptr && root->right!=nullptr){\n            return to_string(root->val)+\"()\"+'('+re(root->right)+')';\n        }\n        else if(root->left!=nullptr && root->right==nullptr){\n            return to_string(root->val)+'('+re(root->left)+')';\n        }\n        else{\n            str=to_string(root->val)+'('+re(root->left)+')'+'('+re(root->right)+')';\n            return str;\n        }\n    }\n    string tree2str(TreeNode* root) {\n        return re(root);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-string-from-binary-tree"}