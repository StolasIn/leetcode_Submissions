{"id":549786618,"lang":"cpp","time":"9 months, 2 weeks","timestamp":1630831700,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/549786618/","is_pending":"Not Pending","title":"Delete Nodes And Return Forest","memory":"25.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    unordered_set<int> s;\n    vector<TreeNode*> ans;\n    TreeNode* re(TreeNode* r){\n        if(r==nullptr){\n            return nullptr;\n        }\n        if(s.find(r->val)!=s.end()){\n            r->left=re(r->left);\n            r->right=re(r->right);\n            if(r->left!=nullptr) ans.emplace_back(r->left);\n            if(r->right!=nullptr) ans.emplace_back(r->right);\n            return nullptr;\n        }\n        else{\n            r->left=re(r->left);\n            r->right=re(r->right);\n            return r;\n        }\n    }\n    vector<TreeNode*> delNodes(TreeNode* root, vector<int>& del) {\n        for(int i=0;i<del.size();i++){\n            s.insert(del[i]);\n        }\n        if(s.find(root->val)==s.end()){\n            ans.emplace_back(root);\n        }\n        re(root);\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-nodes-and-return-forest"}