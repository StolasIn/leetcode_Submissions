{"id":520067591,"lang":"cpp","time":"11 months, 2 weeks","timestamp":1625887057,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/520067591/","is_pending":"Not Pending","title":"Average of Levels in Binary Tree","memory":"22.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> v[1000];\n    int level=0;\n    void dfs(TreeNode* root,int dis){\n        if(root==nullptr) return;\n        level=max(level,dis);\n        v[dis].emplace_back(root->val);\n        dfs(root->left,dis+1);\n        dfs(root->right,dis+1);\n    }\n    double avg(vector<int>& v){\n        double m=v.size();\n        long long int sum=0;\n        for(int i=0;i<m;i++){\n            sum+=v[i];\n        }\n        return sum/m;\n    }\n    vector<double> averageOfLevels(TreeNode* root) {\n        dfs(root,0);\n        vector<double> ans;\n        for(int i=0;i<=level;i++){\n            ans.emplace_back(avg(v[i]));\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"average-of-levels-in-binary-tree"}