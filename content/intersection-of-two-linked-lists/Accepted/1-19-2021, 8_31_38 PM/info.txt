{"id":445027939,"lang":"cpp","time":"1 year, 5 months","timestamp":1611059498,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/445027939/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"17.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {\n        unordered_map<ListNode*,bool> map1;\n        unordered_map<ListNode*,bool> map2;\n        for(;headA!=nullptr;headA=headA->next){\n            map1[headA]=1;\n        }\n        for(;headB!=nullptr;headB=headB->next){\n            if(map1.find(headB)!=map1.end()){\n                return headB;\n            }\n        }\n        return nullptr;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists"}