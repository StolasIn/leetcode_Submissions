{"id":546022233,"lang":"java","time":"9 months, 3 weeks","timestamp":1630223506,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/546022233/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public ListNode getIntersectionNode(ListNode heada, ListNode headb) {\n        ListNode curr = headA;\n        int hA=0;\n        int hB=0;\n        \n        while(curr!=null){\n            curr=curr.next;\n            hA++;\n        }\n        \n        curr = headB;\n         while(curr!=null){\n            curr=curr.next;\n            hB++;\n        }\n        \n        \n        \n        if(hA>hB){\n            while(hA!=hB){\n              headA=headA.next;\n            hA--;  \n            }\n            \n        }\n        \n        \n        if(hB>hA){\n            while(hB!=hA){\n               headB=headB.next;\n            hB--; \n            }\n            \n        }\n        \n        while(headA!=headB){\n           headA=headA.next;\n            headB=headB.next;\n        }\n        \n        \n        \n        \n        \n        \n        \n      return headA;  \n    }\n}","compare_result":null,"title_slug":"intersection-of-two-linked-lists"}