{"id":535760647,"lang":"cpp","time":"10 months, 2 weeks","timestamp":1628516477,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/535760647/","is_pending":"Not Pending","title":"3Sum With Multiplicity","memory":"16.8 MB","code":"class Solution {\npublic:\n    int m=1e9+7;\n    vector<vector<int>> Sum(vector<int>& nums, int target) {\n    sort(begin(nums), end(nums));\n    return kSum(nums, target, 0, 3);\n}\nvector<vector<int>> kSum(vector<int>& nums, int target, int start, int k) {\n    vector<vector<int>> res;\n    if (start == nums.size() || nums[start] * k > target || target > nums.back() * k)\n        return res;\n    if (k == 2)\n        return twoSum(nums, target, start);\n    for (int i = start; i < nums.size(); ++i)\n        if (i == start || nums[i - 1] != nums[i])\n            for (auto &set : kSum(nums, target - nums[i], i + 1, k - 1)) {\n                res.push_back({nums[i]});\n                res.back().insert(end(res.back()), begin(set), end(set));\n            }\n    return res;\n}\nvector<vector<int>> twoSum(vector<int>& nums, int target, int start) {\n    vector<vector<int>> res;\n    int lo = start, hi = nums.size() - 1;\n    while (lo < hi) {\n        int sum = nums[lo] + nums[hi];\n        if (sum < target || (lo > start && nums[lo] == nums[lo - 1]))\n            ++lo;\n        else if (sum > target || (hi < nums.size() - 1 && nums[hi] == nums[hi + 1]))\n            --hi;\n        else\n            res.push_back({ nums[lo++], nums[hi--]});\n    }\n    return res;\n}\n    long long int c(int a,int b){\n        long long int ans=1;\n        for(int i=1;i<=b;i++){\n            ans*=(a--);\n            ans/=i;\n            ans%=m;\n        }\n        return ans;\n    }\n    int threeSumMulti(vector<int>& arr, int target) {\n        int ans=0;\n        sort(arr.begin(),arr.end());\n        auto v=Sum(arr,target);\n        unordered_map<int,int> map;\n        for(int i=0;i<arr.size();i++){\n            map[arr[i]]++;\n        }\n        for(auto i : v){\n            if(i[0]==i[1] && i[1]==i[2]){\n                ans+=c(map[i[0]],3);\n            }\n            else if(i[0]==i[1]){\n                ans+=c(map[i[0]],2)*map[i[2]];  \n            }\n            else if(i[1]==i[2]){\n                ans+=c(map[i[1]],2)*map[i[0]];\n            }\n            else{\n                ans+=((map[i[0]]*map[i[1]])%m)*map[i[2]];\n            }\n        }\n        return ans%m;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum-with-multiplicity"}