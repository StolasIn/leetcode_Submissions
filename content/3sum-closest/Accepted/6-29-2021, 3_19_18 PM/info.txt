{"id":514788501,"lang":"java","time":"11 months, 3 weeks","timestamp":1624951158,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/514788501/","is_pending":"Not Pending","title":"3Sum Closest","memory":"38.7 MB","code":"class Solution {\n    public int threeSumClosest(int[] nums, int target) {\n        int mi=Integer.MAX_VALUE;\n        int ans=0;\n        int l,r;\n        Arrays.sort(nums);\n        for(int i=0;i<nums.length;i++){\n            if(i!=0 && nums[i-1]==nums[i]) continue;\n            l=i+1;\n            r=nums.length-1;\n            while(r>l){\n                if(nums[i]+nums[l]+nums[r]==target){\n                    return target;\n                }\n                else if(nums[i]+nums[l]+nums[r]>target){\n                    if(mi>Math.abs(target-nums[i]-nums[l]-nums[r])){\n                        mi=Math.abs(target-nums[i]-nums[l]-nums[r]);\n                        ans=nums[i]+nums[l]+nums[r];\n                    }\n                    r--;\n                }\n                else{\n                    if(mi>Math.abs(target-nums[i]-nums[l]-nums[r])){\n                        mi=Math.abs(target-nums[i]-nums[l]-nums[r]);\n                        ans=nums[i]+nums[l]+nums[r];\n                    }\n                    l++;\n                }\n            }\n        }\n        return ans;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum-closest"}