{"id":517659122,"lang":"cpp","time":"11 months, 3 weeks","timestamp":1625477560,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/517659122/","is_pending":"Not Pending","title":"Flatten a Multilevel Doubly Linked List","memory":"7.6 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* prev;\n    Node* next;\n    Node* child;\n};\n*/\n\nclass Solution {\npublic:\n    vector<int> v;\n    void dfs(Node* now){\n        if(now==nullptr) return;\n        v.emplace_back(now->val);\n        if(now->child!=nullptr){\n            dfs(now->child);\n        }\n        dfs(now->next);\n        return;\n    }\n    Node* flatten(Node* head) {\n        if(head==nullptr) return nullptr;\n        dfs(head);\n        Node* h=new Node();\n        auto r=h;\n        h->prev=nullptr;\n        Node* tmp=nullptr;\n        for(int i=0;i<v.size();i++){\n            h->val=v[i];\n            h->child=nullptr;\n            h->prev=tmp;\n            if(i!=v.size()-1){\n                h->next=new Node();\n                tmp=h;\n                h=h->next;\n            }\n        }\n        return r;\n    }\n};","compare_result":"11111111111111111111111111","title_slug":"flatten-a-multilevel-doubly-linked-list"}