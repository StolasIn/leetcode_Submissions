{"id":565926804,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1633396277,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/565926804/","is_pending":"Not Pending","title":"Implement Stack using Queues","memory":"6.8 MB","code":"class MyStack {\npublic:\n    queue<int> q;\n    int t;\n    MyStack() {\n        \n    }\n    \n    void push(int x) {\n        q.push(x);\n        t=x;\n    }\n    \n    int pop() {\n        int t1=t;\n        if(q.size()==1){\n            q.pop();\n            return t1;\n        }\n        else if(q.size()==2){\n            q.push(q.front());\n            q.pop();\n            q.pop();\n            t=q.front();\n            return t1;\n        }\n        else{\n            for(int i=0;i<q.size()-2;i++){\n                q.push(q.front());\n                q.pop();\n            }\n            t=q.front();\n            q.push(q.front());\n            q.pop();\n            q.pop();\n            return t1;\n        }\n    }\n    \n    int top() {\n        return t;\n    }\n    \n    bool empty() {\n        return q.empty();\n    }\n};\n\n/**\n * Your MyStack object will be instantiated and called as such:\n * MyStack* obj = new MyStack();\n * obj->push(x);\n * int param_2 = obj->pop();\n * int param_3 = obj->top();\n * bool param_4 = obj->empty();\n */","compare_result":"1111111111111111","title_slug":"implement-stack-using-queues"}