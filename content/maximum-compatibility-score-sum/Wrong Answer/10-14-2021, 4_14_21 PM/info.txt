{"id":571031120,"lang":"cpp","time":"8 months, 1 week","timestamp":1634199261,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/571031120/","is_pending":"Not Pending","title":"Maximum Compatibility Score Sum","memory":"N/A","code":"struct node{\n    int val;\n    int f1,f2;\n    bool operator<(const node& a) const {\n        return a.val>val;\n    }\n};\nclass Solution {\npublic:\n    int cnt(vector<int>& a,vector<int>& b){\n        int ans=0;\n        for(int i=0;i<a.size();i++){\n            if(a[i]==b[i]){\n                ans++;\n            }\n        }\n        return ans;\n    }\n    int maxCompatibilitySum(vector<vector<int>>& s, vector<vector<int>>& m) {\n        int n = m.size();\n        int ans=0;\n        unordered_set<int> s1;\n        unordered_set<int> s2;\n        priority_queue<node> pq;\n        for(int i=0;i<s.size();i++){\n            for(int j=0;j<m.size();j++){\n                pq.push(node{cnt(s[i],m[j]),i,j});\n            }\n        }\n        /*while(!pq.empty()){\n            cout<<pq.top().val<<endl;\n            pq.pop();\n        }*/\n        while(n--){\n            while(1 && !pq.empty()){\n                auto tmp = pq.top();\n                pq.pop();\n                if(s1.find(tmp.f1)==s1.end() && s2.find(tmp.f2)==s2.end()){\n                    s1.insert(tmp.f1);\n                    s2.insert(tmp.f2);\n                    ans+=tmp.val;\n                    break;\n                }\n            }\n        }\n        return ans;\n    }\n};","compare_result":"11111111110101111110111011110111001111101110111111111011101110111110111111111111111111","title_slug":"maximum-compatibility-score-sum"}