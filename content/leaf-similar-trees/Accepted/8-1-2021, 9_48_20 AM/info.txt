{"id":531322264,"lang":"cpp","time":"10 months, 3 weeks","timestamp":1627782500,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/531322264/","is_pending":"Not Pending","title":"Leaf-Similar Trees","memory":"12.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void inorder(TreeNode* root,vector<int>& v){\n        if(root==nullptr) return;\n        inorder(root->left,v);\n        if(root->left==nullptr && root->right==nullptr) v.emplace_back(root->val);\n        inorder(root->right,v);\n    }\n    bool leafSimilar(TreeNode* root1, TreeNode* root2) {\n        vector<int> v1;\n        vector<int> v2;\n        inorder(root1,v1);\n        inorder(root2,v2);\n        if(v1.size()!=v2.size()) return false;\n        for(int i=0;i<v1.size();i++){\n            if(v1[i]!=v2[i]){\n                return false;\n            }\n        }\n        return true;\n    }\n};","compare_result":"1111111111111111111111111111111111111111","title_slug":"leaf-similar-trees"}