{"id":449569647,"lang":"cpp","time":"1 year, 4 months","timestamp":1611980558,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/449569647/","is_pending":"Not Pending","title":"Sort an Array","memory":"16.7 MB","code":"class heap{\npublic:\n    heap(){\n        heap_array=vector<int>();\n        heap_size=0;\n        heap_array.emplace_back(0);\n    }\n    void push(int x){\n        heap_array.emplace_back(x);\n        heap_size++;\n        push_heapify();\n    }\n    void pop(){\n        if(heap_size>0){\n            swap(heap_array[1],heap_array[heap_size]);\n            heap_array.pop_back();\n            heap_size--;\n            pop_heapify();\n        }\n        else{\n            printf(\"heap is empty.\");\n        }\n    }\n    int top(){\n        if(empty()==false){\n            return heap_array[1];\n        }\n        else{\n            printf(\"heap is empty , return 0. \");\n            return 0;\n        }\n    }\n    int size(){\n        return heap_size;\n    }\n    bool empty(){\n        if(heap_size==0) return true;\n        return false;\n    }\n    void print_array(){\n        for(int i=1;i<=size();i++){\n            printf(\"%3d\",heap_array[i]);\n        }\n        printf(\"\\n\");\n    }\n\nprivate:\n    vector<int> heap_array;\n    int heap_size;\n\n    void push_heapify(){\n        int m=heap_size;\n        while(heap_array[m]<heap_array[m/2] && m/2!=0){\n            swap(heap_array[m],heap_array[m/2]);\n            m/=2;\n        }\n    }\n    void pop_heapify(){\n        if(heap_size==1){\n            return;\n        }\n        else if(heap_size==2){\n            if(heap_array[1]>heap_array[2]) swap(heap_array[1],heap_array[2]);\n        }\n        else if(heap_size>=3){\n            int root=1;\n            int left=2;\n            int right=3;\n            int max1;\n            while((left<heap_size && right<=heap_size) && (heap_array[root]>heap_array[left] || heap_array[root]>heap_array[right])){\n                max1=left;\n                if(heap_array[max1]>heap_array[right]) max1=right;\n                swap(heap_array[root],heap_array[max1]);\n                if(max1==left){\n                    root=left;\n                    left=root*2;\n                    right=root*2+1;\n                }\n                else{\n                    root=right;\n                    left=root*2;\n                    right=root*2+1;\n                }\n            }\n        }\n    }\n};\n\nclass Solution {\npublic:\n    vector<int> sortArray(vector<int>& arr){\n        heap he;\n        vector<int> ans;\n        for(int i=0;i<arr.size();i++){\n            he.push(arr[i]);\n        }\n        while(he.empty()==false){\n            ans.emplace_back(he.top());\n            he.pop();\n        }\n        return ans;\n    }\n};","compare_result":"11111111111","title_slug":"sort-an-array"}