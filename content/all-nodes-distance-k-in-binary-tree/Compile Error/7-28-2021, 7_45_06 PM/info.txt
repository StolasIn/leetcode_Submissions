{"id":529603327,"lang":"cpp","time":"10 months, 4 weeks","timestamp":1627472706,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/529603327/","is_pending":"Not Pending","title":"All Nodes Distance K in Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    unordered_map<int,TreeNode*> par;\n    vector<int> ans;\n    int x;\n    void dfs(TreeNode* now){\n        if(now==nullptr) return;\n        par[now->val]=now;\n        dfs(now->left);\n        dfs(now->right);\n    }\n    void dfs2(TreeNode* now,int dis){\n        if(now==nullptr) return;\n        if(dis>k) return;\n        if(dis==x){\n            ans.emplace_back(now->val);\n        }\n        dfs2(now->left,dis+1);\n        dfs2(now->right,dis+1);\n        dfs2(par[now->val],dis+1);\n    }\n    vector<int> distanceK(TreeNode* root, TreeNode* target, int k) {\n        x=k;\n        dfs(root);\n        dfs2(target,0);\n        return ans;\n    }\n};","compare_result":null,"title_slug":"all-nodes-distance-k-in-binary-tree"}