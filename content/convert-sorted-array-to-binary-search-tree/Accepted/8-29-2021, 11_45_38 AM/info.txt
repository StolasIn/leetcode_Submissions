{"id":545920686,"lang":"java","time":"9 months, 3 weeks","timestamp":1630208738,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/545920686/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"41.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode sortedArrayToBST(int[] nums) {\n        int m = nums.length;\n        if(nums.length==0){\n            return null;\n        }\n        TreeNode t = new TreeNode(nums[m/2]);\n        if(nums.length==1){\n            return t;\n        }\n        int[] left=Arrays.copyOfRange(nums,0,m/2);\n        int[] right=Arrays.copyOfRange(nums,m/2+1,m);\n        t.left=sortedArrayToBST(left);\n        t.right=sortedArrayToBST(right);\n        return t;\n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree"}