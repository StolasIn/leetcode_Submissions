{"id":534576555,"lang":"cpp","time":"10 months, 2 weeks","timestamp":1628320624,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/534576555/","is_pending":"Not Pending","title":"Increasing Order Search Tree","memory":"8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* ans;\n    void inorder(TreeNode* root){\n        if(root==nullptr) return;\n        inorder(root->left);\n        ans->right=new TreeNode(root->val);\n        ans=ans->right;\n        inorder(root->right);\n    }\n    TreeNode* increasingBST(TreeNode* root) {\n        ans = new TreeNode();\n        auto res=ans;\n        inorder(root);\n        return res->right;\n    }\n};","compare_result":"1111111111111111111111111111111111111","title_slug":"increasing-order-search-tree"}