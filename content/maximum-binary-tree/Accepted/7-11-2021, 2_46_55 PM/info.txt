{"id":520658940,"lang":"cpp","time":"11 months, 2 weeks","timestamp":1625986015,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/520658940/","is_pending":"Not Pending","title":"Maximum Binary Tree","memory":"42.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int fmax(vector<int>& v,int l,int r){\n        int ma=-1;\n        int ans;\n        for(int i=l;i<=r;i++){\n            if(ma<v[i]){\n                ans=i;\n                ma=v[i];\n            }\n        }\n        return ans;\n    }\n    TreeNode* re(vector<int>& v,int now,int l,int r){\n        if(r<l) return nullptr;\n        TreeNode* node=new TreeNode(v[now]);\n        node->left=re(v,fmax(v,l,now-1),l,now-1);\n        node->right=re(v,fmax(v,now+1,r),now+1,r);\n        return node;\n    }\n    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {\n        int m=nums.size();\n        return re(nums,fmax(nums,0,m-1),0,m-1);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-binary-tree"}