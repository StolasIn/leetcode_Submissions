{"id":521082506,"lang":"cpp","time":"11 months, 2 weeks","timestamp":1626057564,"status_display":"Accepted","runtime":"92 ms","url":"/submissions/detail/521082506/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"34.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* searchBST(TreeNode* root, int val) {\n        while(1){\n            if(root==nullptr) return nullptr;\n            if(root->val==val){\n                return root;\n            }\n            else if(root->val<val){\n                root=root->right;\n            }\n            else{\n                root=root->left;\n            }\n        }\n        return nullptr;\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree"}