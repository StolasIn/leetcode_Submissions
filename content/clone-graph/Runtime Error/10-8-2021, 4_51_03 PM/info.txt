{"id":567779832,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1633683063,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/567779832/","is_pending":"Not Pending","title":"Clone Graph","memory":"N/A","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    vector<Node*> neighbors;\n    Node() {\n        val = 0;\n        neighbors = vector<Node*>();\n    }\n    Node(int _val) {\n        val = _val;\n        neighbors = vector<Node*>();\n    }\n    Node(int _val, vector<Node*> _neighbors) {\n        val = _val;\n        neighbors = _neighbors;\n    }\n};\n*/\n\nclass Solution {\npublic:\n    unordered_map<int,Node*> map;\n    Node* cloneGraph(Node* node) {\n        if(map.find(node->val)!=map.end()){\n            return map[node->val];\n        }\n        Node* tmp = new Node(node->val);\n        map[node->val]=tmp;\n        for(int i=0;i<node->neighbors.size();i++){\n            tmp->neighbors.emplace_back(cloneGraph(node->neighbors[i]));\n        }\n        return tmp;\n    }\n};","compare_result":"1100000000000000000000","title_slug":"clone-graph"}