{"id":449655574,"lang":"cpp","time":"1 year, 4 months","timestamp":1612000539,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/449655574/","is_pending":"Not Pending","title":"Range Sum Query 2D - Immutable","memory":"N/A","code":"class NumMatrix {\npublic:\n    vector<vector<int>> prefix;\n    NumMatrix(vector<vector<int>>& ma) {\n        int m=ma.size();\n        int n=ma[0].size();\n        prefix=vector<vector<int>>(m,vector<int>(n));\n        int sum=0;\n        for(int i=0;i<m;i++){\n            for(int j=0;j<n;j++){\n                if(i==0 && j==0)\n                   prefix[i][j] = ma[i][j];\n                else if(i==0 && j>0)\n                   prefix[i][j] = prefix[i][j-1] + ma[i][j];\n                else if(i>0 && j==0)\n                   prefix[i][j] = prefix[i-1][j] + ma[i][j];\n                else prefix[i][j] = prefix[i-1][j] + prefix[i][j-1] - prefix[i-1][j-1] + ma[i][j];\n            }\n        }\n    }\n    \n    int sumRegion(int r1, int c1, int r2, int c2) {\n        if(r1==0 || c1==0){\n            if(r1==0 && c1==0){\n                return prefix[r2][c2];\n            }\n            else if(r1==0){\n                return prefix[r2][c2]-prefix[r2][c1-1];\n            }\n            else{\n                return prefix[r2][c2]-prefix[r1-1][c2];\n            }\n        }\n        return prefix[r2][c2]-prefix[r1-1][c2]-prefix[r2][c1-1]+prefix[r1-1][c1-1];\n    }\n};\n\n/**\n * Your NumMatrix object will be instantiated and called as such:\n * NumMatrix* obj = new NumMatrix(matrix);\n * int param_1 = obj->sumRegion(row1,col1,row2,col2);\n */","compare_result":"100000000000","title_slug":"range-sum-query-2d-immutable"}