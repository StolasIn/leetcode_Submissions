{"id":520052986,"lang":"cpp","time":"11 months, 2 weeks","timestamp":1625883823,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/520052986/","is_pending":"Not Pending","title":"Add One Row to Tree","memory":"25 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int v,dph;\n    void dfs(TreeNode* root,int dis){\n        if(root==nullptr) return;\n        if(dis==dph-2){\n            auto tmp1=root->left;\n            root->left=new TreeNode(v);\n            root->left->left=tmp1;\n            tmp1=root->right;\n            root->right=new TreeNode(v);\n            root->right->right=tmp1;\n            return;\n        }\n        dfs(root->left,dis+1);\n        dfs(root->right,dis+1);\n    }\n    TreeNode* addOneRow(TreeNode* root, int val, int depth) {\n        if(depth==1){\n            TreeNode* head=new TreeNode(val);\n            head->left=root;\n            return head;\n        }\n        v=val;\n        dph=depth;\n        dfs(root,0);\n        return root;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"add-one-row-to-tree"}