{"id":641100011,"lang":"cpp","time":"4 months, 1 week","timestamp":1644825308,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/641100011/","is_pending":"Not Pending","title":"Search Insert Position","memory":"N/A","code":"class Solution {\npublic:\n    int searchInsert(vector<int>& nums, int target) {\n        int left = 0;\n        int right = nums.size();\n        if(nums[0]>target){\n            return 0;\n        }\n        if(nums[nums.size()-1]==target){\n            return nums.size();\n        }\n        while(right>=left){\n            int mid = (right+left) / 2;\n            if(nums[mid] == target){\n                return mid;\n            }\n            else if(nums[mid]>target){\n                if(mid!=0 && nums[mid-1]<=target){\n                    return mid;\n                }\n                else{\n                    right = mid-1;\n                }\n            }\n            else{\n                if(mid!=nums.size()-1 && nums[mid+1]>=target){\n                    return mid;\n                }\n                else{\n                    left = mid+1;\n                }\n            }\n        }\n        return -1;\n    }\n};","compare_result":"1000000000000000000000000000000000000000000000000000000000000000","title_slug":"search-insert-position"}