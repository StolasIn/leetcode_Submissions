{"id":521317296,"lang":"cpp","time":"11 months, 2 weeks","timestamp":1626095674,"status_display":"Accepted","runtime":"96 ms","url":"/submissions/detail/521317296/","is_pending":"Not Pending","title":"Find Median from Data Stream","memory":"49.4 MB","code":"class MedianFinder {\npublic:\n    /** initialize your data structure here. */\n     MedianFinder() {}\n    \n    void addNum(int num) {\n        nums.insert(num);\n        is_even = !is_even;\n        if (it == nums.end() || (is_even && (*it) <= num)) it++;\n        if (!is_even && (*it) > num) it--;\n    }\n    \n    double findMedian() {\n        return (!is_even)? *it : (*it + *prev(it)) / 2.0;\n    }\n    \nprivate:\n    multiset<int> nums;\n    multiset<int>::iterator it = nums.begin();\n    bool is_even = true;\n};\n\n/**\n * Your MedianFinder object will be instantiated and called as such:\n * MedianFinder* obj = new MedianFinder();\n * obj->addNum(num);\n * double param_2 = obj->findMedian();\n */","compare_result":"111111111111111111","title_slug":"find-median-from-data-stream"}