{"id":445755171,"lang":"cpp","time":"1 year, 5 months","timestamp":1611204089,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/445755171/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"14.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    bool isPalindrome(ListNode* head) {\n        if(head==nullptr) return true;\n        if(head->next==nullptr) return true;\n        stack<int> st;\n        ListNode* tmp=head;\n        for(;head!=nullptr;head=head->next){\n            st.push(head->val);\n        }\n        for(;tmp!=nullptr;tmp=tmp->next){\n            if(tmp->val==st.top()) st.pop();\n            else{\n                return false;\n            }\n        }\n        if(st.size()==0) return true;\n        return false;\n    }\n};","compare_result":"11111111111111111111111111","title_slug":"palindrome-linked-list"}