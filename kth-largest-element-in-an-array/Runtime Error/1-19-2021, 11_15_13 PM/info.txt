{"id":445066964,"lang":"cpp","time":"1 year, 5 months","timestamp":1611069313,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/445066964/","is_pending":"Not Pending","title":"Kth Largest Element in an Array","memory":"N/A","code":"class Solution {\npublic:\n    //找出pivot\n    int ans;\n    int partition1(vector<int> &arr,int left,int right){\n        int pivot=arr[right]; //令陣列的最後一個元素是pivot\n        int front1=left-1; //front1用來交換元素\n        for(int cur=left;cur<right;cur++){ //cur枚舉陣列的所有元素\n            if(arr[cur]<pivot){ //如果當前的元素比pivot小，就擺到左邊\n                front1++; //替換的位置加1\n                swap(arr[cur],arr[front1]); //互換\n            }\n        }\n        //把pivot換到目前陣列front1+1的位置，就可以確保在pivot左邊的元素都比pivot小\n        front1++; //front1+1的位置\n        swap(arr[front1],arr[right]);\n        return front1;//把pivot回傳\n    }\n    void quick_select(vector<int>& nums,int left,int right,int k){\n        if(right>left){\n            int pivot=partition1(nums,left,right);\n            if(right-pivot==k-1){\n                ans=nums[pivot];\n            }\n            quick_select(nums,left,pivot-1,k);\n            quick_select(nums,pivot+1,right,k);\n        }\n    }\n    int findKthLargest(vector<int>& nums, int k) {\n        if(nums.size()==1) return nums[0];\n        quick_select(nums,0,nums.size(),k);\n        return ans;\n    }\n};","compare_result":"11100000000000000000000000000000","title_slug":"kth-largest-element-in-an-array"}