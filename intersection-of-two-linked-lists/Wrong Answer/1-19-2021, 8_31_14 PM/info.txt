{"id":445027866,"lang":"cpp","time":"1 year, 5 months","timestamp":1611059474,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/445027866/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {\n        unordered_map<ListNode*,bool> map1;\n        unordered_map<ListNode*,bool> map2;\n        ListNode * ans=new ListNode();\n        for(;headA!=nullptr;headA=headA->next){\n            map1[headA]=1;\n        }\n        for(;headB!=nullptr;headB=headB->next){\n            if(map1.find(headB)!=map1.end()){\n                return headB;\n            }\n        }\n        return ans;\n    }\n};","compare_result":"1100000010000000000111111111111111111111111100","title_slug":"intersection-of-two-linked-lists"}