{"id":515281994,"lang":"cpp","time":"11 months, 3 weeks","timestamp":1625038561,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/515281994/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* check;\n    bool f;\n    vector<TreeNode*> t;\n    void dfs(vector<TreeNode*>& v,TreeNode* now){\n        if(f || now==nullptr) return;\n        v.emplace_back(now);\n        if(now->val==check->val){\n            t.assign(v.begin(),v.end());\n            f=true;\n            return;\n        }\n        dfs(v,now->left);\n        dfs(v,now->right);\n        v.pop_back();\n    }\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        vector<TreeNode*> t1;\n        vector<TreeNode*> t2;\n        vector<TreeNode*> v;\n        TreeNode* ans;\n        f=false;\n        check=p;\n        t.clear();\n        dfs(v,root);\n        t1.assign(t.begin(),t.end());\n        f=false;\n        check=q;\n        t.clear();\n        v.clear();\n        dfs(v,root);\n        t2.assign(t.begin(),t.end());\n        if(t1.size()<t2.size()){\n            if(t1[t1.size()-1]->val==t2[t1.size()-1]->val){\n                return t1[t1.size()-1];\n            }\n        }\n        else{\n            if(t1[t2.size()-1]->val==t2[t2.size()-1]->val){\n                return t1[t2.size()-1];\n            }\n        }\n        for(int i=0;i<min(t1.size(),t2.size());i++){\n            if(t1[i]->val!=t2[i]->val){\n                ans=t1[i-1];\n            }\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111011011110110011","title_slug":"lowest-common-ancestor-of-a-binary-tree"}