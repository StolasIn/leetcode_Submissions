{"id":643658905,"lang":"cpp","time":"4Â months","timestamp":1645156789,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/643658905/","is_pending":"Not Pending","title":"Maximum Sum Circular Subarray","memory":"N/A","code":"class Solution {\npublic:\n    int maxSubarraySumCircular(vector<int>& nums) {\n        int m = nums.size();\n        int now = 0;\n        int ans = -1e9;\n        for(int i=0;i<nums.size();i++){\n            now+=nums[i];\n            ans = max(ans,now);\n            if(now<0){\n                now=0;\n            }\n        }\n        nums.insert(nums.end(),nums.begin(),nums.end());\n        int l = m/2-1,r=m/2+1;\n        ans = max(ans,nums[l]+nums[r]);\n        while(l>0){\n            ans = max(ans,nums[l-1]+nums[r]);\n            ans = max(ans,nums[l]+nums[r+1]);\n            l--;\n            r++;\n        }\n        return ans;\n    }\n};","compare_result":"111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"maximum-sum-circular-subarray"}