{"id":643670254,"lang":"cpp","time":"4Â months","timestamp":1645158042,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/643670254/","is_pending":"Not Pending","title":"Maximum Sum Circular Subarray","memory":"39.7 MB","code":"class Solution {\npublic:\n     int maxSubarraySumCircular(vector<int>& nums) {\n        int total = 0, maxSum = nums[0], curMax = 0, minSum = nums[0], curMin = 0;\n        for (int i=0;i<nums.size();i++) {\n            curMax = max(curMax + nums[i], nums[i]);\n            maxSum = max(maxSum, curMax);\n            curMin = min(curMin + nums[i], nums[i]);\n            minSum = min(minSum, curMin);\n            total += nums[i];\n        }\n        return maxSum > 0 ? max(maxSum, total - minSum) : maxSum;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-sum-circular-subarray"}