{"id":643668226,"lang":"cpp","time":"4Â months","timestamp":1645157832,"status_display":"Accepted","runtime":"116 ms","url":"/submissions/detail/643668226/","is_pending":"Not Pending","title":"Maximum Sum Circular Subarray","memory":"39.7 MB","code":"class Solution {\npublic:\n    int maxSubarraySumCircular(vector<int>& nums) {\n        int m = nums.size();\n        int now1 = 0;\n        int now2 = 0;\n        int ans1 = -1e9;\n        int ans2 = 1e9;\n        int total = 0;\n        for(int i=0;i<nums.size();i++){\n            now1+=nums[i];\n            ans1 = max(ans1,now1);\n            if(now1<0){\n                now1=0;\n            }\n            now2+=nums[i];\n            ans2 = min(ans2,now2);\n            if(now2>0){\n                now2=0;\n            }\n            total += nums[i];\n        }\n        return ans1>0 ? max(ans1,total-ans2) : ans1;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-sum-circular-subarray"}