{"id":498436426,"lang":"cpp","time":"1Â year","timestamp":1622013814,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/498436426/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"75.8 MB","code":"class Solution {\npublic:\n    bool findSum(vector<int> &nums, int n, int S, vector<vector<int>> &dp){\n        if(S == 0)\n            return true;\n        if(n <= 0 || S < 0)\n            return false;\n        if(dp[n][S] == -1)\n            dp[n][S] = findSum(nums, n-1, S-nums[n-1], dp) || findSum(nums, n-1, S, dp);\n        return (dp[n][S]==1)?true:false;\n    }\n    bool canPartition(vector<int>& nums) {\n        int total = 0;\n        for_each(nums.begin(), nums.end(), [&](int a){\n\t\t    total += a;\n\t    });\n        if(total % 2 != 0)\n            return false;\n        vector<vector<int>> dp(nums.size()+1, vector<int>(total/2+1,-1));\n        return findSum(nums, nums.size(), total/2, dp);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-equal-subset-sum"}