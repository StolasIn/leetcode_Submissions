{"id":448327892,"lang":"cpp","time":"1 year, 4 months","timestamp":1611718240,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/448327892/","is_pending":"Not Pending","title":"Word Search","memory":"N/A","code":"class Solution {\npublic:\n    struct node{\n        int x,y;\n    };\n    int m,n;\n    bool has=false;\n    void dfs(vector<vector<char>>& board, string& word,int now,int x,int y,vector<vector<bool>>& vis){\n        if(has) return;\n        if(x<0 || x>=m || y<0 || y>=n) return;\n        if(word[now]!=board[x][y]) return;\n        if(vis[x][y]) return;\n        vis[x][y]=true;\n        if(now==word.size()-1){\n            has=true;\n            return;\n        }\n        dfs(board,word,now+1,x+1,y,vis);\n        dfs(board,word,now+1,x,y+1,vis);\n        dfs(board,word,now+1,x-1,y,vis);\n        dfs(board,word,now+1,x,y-1,vis);\n    }\n    bool exist(vector<vector<char>>& board, string word) {\n        vector<node> arr;\n        m=board.size();\n        n=board[0].size();\n        vector<vector<bool>> vis(m,vector<bool>(n,false));\n        for(int i=0;i<m;i++){\n            for(int j=0;j<n;j++){\n                if(board[i][j]==word[0]){\n                    dfs(board,word,0,i,j,vis);\n                }\n            }\n        }\n        return has;\n    }\n};","compare_result":"11111111111111111111111101110111111111111111111111111000011011110111111110111111111111111","title_slug":"word-search"}