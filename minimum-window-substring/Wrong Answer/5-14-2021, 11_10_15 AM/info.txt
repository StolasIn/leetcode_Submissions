{"id":492868383,"lang":"cpp","time":"1 year, 1 month","timestamp":1620961815,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/492868383/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"N/A","code":"class Solution {\npublic:\n    string minWindow(string s, string t) {\n        int l=0,r=0;\n        int arr[128];\n        int cnt[128];\n        int c=0;\n        int f=0;\n        for(int i=0;i<128;i++){\n            arr[i]=0;\n            cnt[i]=0;\n        }\n        int mi=INT_MAX;\n        int m=s.size();\n        int n=t.size();\n        for(int i=0;i<n;i++){\n            if(arr[t[i]]==0) f++;\n            arr[t[i]]++;\n        }\n        while(r<=m){\n            if(c<f){\n                if(cnt[s[r]]<arr[s[r]]-1){\n                    cnt[s[r]]++;\n                    r++;\n                }\n                else if(cnt[s[r]]==arr[s[r]]-1){\n                    cnt[s[r]]++;\n                    r++;\n                    c++;\n                }\n                else{\n                    cnt[s[r]]++;\n                    r++;\n                }\n            }\n            else{\n                mi=min(mi,r-l);\n                if(cnt[s[l]]==arr[s[l]]){\n                    c--;\n                    cnt[s[l]]--;\n                    l++;\n                }\n                else{\n                    cnt[s[l]]--;\n                    l++;\n                }\n            }\n        }\n        cout<<mi<<endl;\n        return \"\";\n    }\n};","compare_result":"00111001010000000110000000000000000000000000010011001111101100111110011000100001011111011110011011100100000000000000000001101111110101101101011110111001011111010110111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"minimum-window-substring"}