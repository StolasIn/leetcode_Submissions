{"id":558047386,"lang":"cpp","time":"9Â months","timestamp":1632143246,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/558047386/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"38 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int d,ans;\n    int dep(TreeNode* r){\n        if(r==nullptr){\n            return 0;\n        }\n        int x = dep(r->left);\n        int y = dep(r->right);\n        return max(x,y)+1;\n    }\n    void re(TreeNode* r,int dis){\n        if(r==nullptr) return;\n        if(dis==d-1){\n            ans+=r->val;\n            return;\n        }\n        re(r->left,dis+1);\n        re(r->right,dis+1);\n    }\n    int deepestLeavesSum(TreeNode* root) {\n        d=dep(root);\n        ans=0;\n        re(root,0);\n        return ans;\n    }\n};","compare_result":"111111111111111","title_slug":"deepest-leaves-sum"}