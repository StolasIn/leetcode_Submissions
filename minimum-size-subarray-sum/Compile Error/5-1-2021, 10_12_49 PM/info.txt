{"id":487423678,"lang":"cpp","time":"1 year, 1 month","timestamp":1619878369,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/487423678/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"N/A","code":"class Solution {\npublic:\n    int minSubArrayLen(int target, vector<int>& nums) {\n        int n = nums.size();\n    int ans = INT_MAX;\n    int left = 0;\n    int sum = 0;\n    for (int i = 0; i < n; i++) {\n        sum += nums[i];\n        while (sum >= s) {\n            ans = min(ans, i + 1 - left);\n            sum -= nums[left++];\n        }\n    }\n    return (ans != INT_MAX) ? ans : 0;\n    }\n};","compare_result":null,"title_slug":"minimum-size-subarray-sum"}