{"id":477559712,"lang":"cpp","time":"1 year, 2 months","timestamp":1617775312,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/477559712/","is_pending":"Not Pending","title":"Implement Trie (Prefix Tree)","memory":"48.3 MB","code":"class tn{\npublic:\n    bool isend;\n    vector<tn*> link;\n    tn(){\n        isend=false;\n        link.assign(26,nullptr);\n    }\n};\nclass Trie {\npublic:\n    /** Initialize your data structure here. */\n    tn* root;\n    tn* tmp;\n    int c;\n    Trie() {\n        root=new tn();\n    }\n    /** Inserts a word into the trie. */\n    void insert(string word) {\n        c=0;\n        int m=word.size();\n        tmp=root;\n        while(c<word.size()){\n            if(tmp->link[word[c]-'a']==nullptr){\n                tmp->link[word[c]-'a']=new tn();\n            }\n            tmp=tmp->link[word[c]-'a'];\n            c++;\n        }\n        tmp->isend=true;\n    }\n    \n    /** Returns if the word is in the trie. */\n    bool search(string word) {\n        tmp=root;\n        c=0;\n        while(tmp!=nullptr && c<word.size()){\n            tmp=tmp->link[word[c++]-'a'];\n        }\n        if(tmp==nullptr) return false;\n        if(tmp->isend==false) return false;\n        return true;\n    }\n    \n    /** Returns if there is any word in the trie that starts with the given prefix. */\n    bool startsWith(string prefix) {\n        tmp=root;\n        c=0;\n        while(tmp!=nullptr && c<prefix.size()){\n            tmp=tmp->link[prefix[c++]-'a'];\n        }\n        if(tmp==nullptr) return false;\n        else{\n            if(tmp->isend==true) return true;\n            for(int i=0;i<26;i++){\n                if(tmp->link[i]!=nullptr){\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n};\n\n/**\n * Your Trie object will be instantiated and called as such:\n * Trie* obj = new Trie();\n * obj->insert(word);\n * bool param_2 = obj->search(word);\n * bool param_3 = obj->startsWith(prefix);\n */","compare_result":"111111111111111","title_slug":"implement-trie-prefix-tree"}