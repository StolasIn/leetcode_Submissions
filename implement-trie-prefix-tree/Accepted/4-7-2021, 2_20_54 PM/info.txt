{"id":477566849,"lang":"cpp","time":"1 year, 2 months","timestamp":1617776454,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/477566849/","is_pending":"Not Pending","title":"Implement Trie (Prefix Tree)","memory":"48.4 MB","code":"class trie_node{\npublic:\n    bool isend;\n    vector<trie_node*> link;\n    trie_node(){\n        isend=false;\n        link.assign(26,nullptr);\n    }\n};\nclass Trie {\npublic:\n    /** Initialize your data structure here. */\n    trie_node* root;\n    trie_node* trie_pointer;\n    int counter;\n    Trie() {\n        root=new trie_node();\n    }\n    /** Inserts a word into the trie. */\n    void insert(string word) {\n        counter=0;\n        int m=word.size();\n        trie_pointer=root;\n        while(counter<word.size()){\n            if(trie_pointer->link[word[counter]-'a']==nullptr){\n                trie_pointer->link[word[counter]-'a']=new trie_node();\n            }\n            trie_pointer=trie_pointer->link[word[counter]-'a'];\n            counter++;\n        }\n        trie_pointer->isend=true;\n    }\n    \n    /** Returns if the word is in the trie. */\n    bool search(string word) {\n        trie_pointer=root;\n        counter=0;\n        while(trie_pointer!=nullptr && counter<word.size()){\n            trie_pointer=trie_pointer->link[word[counter++]-'a'];\n        }\n        if(trie_pointer==nullptr) return false;\n        if(trie_pointer->isend==false) return false;\n        return true;\n    }\n    \n    /** Returns if there is any word in the trie that starts with the given prefix. */\n    bool startsWith(string prefix) {\n        trie_pointer=root;\n        counter=0;\n        while(trie_pointer!=nullptr && counter<prefix.size()){\n            trie_pointer=trie_pointer->link[prefix[counter++]-'a'];\n        }\n        if(trie_pointer==nullptr) return false;\n        else{\n            if(trie_pointer->isend==true) return true;\n            for(int i=0;i<26;i++){\n                if(trie_pointer->link[i]!=nullptr){\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n};","compare_result":"111111111111111","title_slug":"implement-trie-prefix-tree"}