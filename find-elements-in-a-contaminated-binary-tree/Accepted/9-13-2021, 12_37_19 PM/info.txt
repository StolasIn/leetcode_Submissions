{"id":554020235,"lang":"cpp","time":"9Â months, 1Â week","timestamp":1631507839,"status_display":"Accepted","runtime":"219 ms","url":"/submissions/detail/554020235/","is_pending":"Not Pending","title":"Find Elements in a Contaminated Binary Tree","memory":"19.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass FindElements {\npublic:\n    TreeNode* t;\n    FindElements(TreeNode* root) {\n        t=root;\n        re(root,0);\n    }\n    void re(TreeNode* r,int val){\n        if(r==nullptr){\n            return;\n        }\n        r->val=val;\n        re(r->left,2*val+1);\n        re(r->right,2*val+2);\n    }\n    bool find(int target) {\n        auto r = t;\n        return find_r(r,target);\n    }\n    bool find_r(TreeNode* r,int target){\n        if(r==nullptr || r->val>target){\n            return false;\n        }\n        if(r->val==target){\n            return true;\n        }\n        return find_r(r->left,target) || find_r(r->right,target);\n    }\n};\n\n/**\n * Your FindElements object will be instantiated and called as such:\n * FindElements* obj = new FindElements(root);\n * bool param_1 = obj->find(target);\n */","compare_result":"1111111111111111111111111111111","title_slug":"find-elements-in-a-contaminated-binary-tree"}