{"id":444414701,"lang":"cpp","time":"1 year, 5 months","timestamp":1610945920,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/444414701/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    bool is_symmetic(TreeNode* left,TreeNode* right){\n        if(left==nullptr && right==nullptr) return true;\n        if(left==nullptr || right==nullptr || left->val!=right->val) return false;\n        return is_symmetic(left->left,right->right) && is_symmetic(left->right,right->left);\n    }\npublic:\n    \n    bool isSymmetric(TreeNode* root) {\n        if(!root) return true;\n        return is_symmetic(root->left,root->right);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}