{"id":457609100,"lang":"cpp","time":"1 year, 4 months","timestamp":1613660922,"status_display":"Accepted","runtime":"972 ms","url":"/submissions/detail/457609100/","is_pending":"Not Pending","title":"Perfect Squares","memory":"9.3 MB","code":"class Solution {\npublic:\n    bool isPerfectSquare(int x){\n        int s = sqrt(x);\n        return s*s == x ? true:false;\n    }\n    int backpack(vector<int>& item,vector<bool>& vis,vector<int>& dp,int it,int remain){\n        if(remain<=3){\n            return remain;\n        }\n        if(vis[remain]) return dp[remain];\n        if(it>=item.size()) return 100000;\n        for(int i=0;i*item[it]<=remain;i++){\n            dp[remain]=min(dp[remain],i+backpack(item,vis,dp,it+1,remain-i*item[it]));\n        }\n        vis[remain]=true;\n        return dp[remain];\n    } \n    int numSquares(int n) {\n        if(isPerfectSquare(n)) return 1;  \n        vector<int> item;\n        vector<bool> vis(n+1,false);\n        vector<int> dp(n+1,100000);\n        int m=sqrt(n);\n        for(int i=1;i<=m;i++){\n            item.emplace_back(i*i);\n        }\n        return backpack(item,vis,dp,0,n);\n    }\n};","compare_resulttitle_slug":"perfect-squares"}