{"id":513309674,"lang":"cpp","time":"12Â months","timestamp":1624690435,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/513309674/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"N/A","code":"class Solution {\npublic:\n    int lookup[50][10010];\n    void buildSparseTable(vector<int>& arr, int n)\n    {\n        for (int i = 0; i < n; i++)\n            lookup[i][0] = arr[i];\n        for (int j = 1; (1 << j) <= n; j++) {\n            for (int i = 0; (i + (1 << j) - 1) < n; i++) {\n                if (lookup[i][j - 1] >\n                            lookup[i + (1 << (j - 1))][j - 1])\n                    lookup[i][j] = lookup[i][j - 1];\n                else\n                    lookup[i][j] =\n                            lookup[i + (1 << (j - 1))][j - 1];\n            }\n        }\n    }\n    int query(int L, int R)\n    {\n        int j = (int)log2(R - L + 1);\n        if (lookup[L][j] > lookup[R - (1 << j) + 1][j])\n            return lookup[L][j];\n        else\n            return lookup[R - (1 << j) + 1][j];\n    }\n    vector<int> maxSlidingWindow(vector<int>& n, int k) {\n        if(k==1) return n;\n        vector<int> ans;\n        buildSparseTable(n,n.size());\n        for(int i=0;i+k-1<n.size();i++){\n            ans.emplace_back(query(i,i+k-1));\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111110000000000000000000000000000000000000000000000","title_slug":"sliding-window-maximum"}