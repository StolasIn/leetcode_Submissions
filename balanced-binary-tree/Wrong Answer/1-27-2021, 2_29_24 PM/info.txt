{"id":448401095,"lang":"cpp","time":"1 year, 4 months","timestamp":1611728964,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/448401095/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int height(TreeNode* root){\n        if(root==nullptr) return 0;\n        int x=height(root->left);\n        int y=height(root->right);\n        root->val=max(x,y);\n        return (x>y ? x : y)+1;\n    }\n    bool check(TreeNode* root){\n        if(root==nullptr) return true;\n        int x,y;\n        if(root->left==nullptr) x=-1;\n        else {x=root->left->val;}\n        if(root->right==nullptr) y=-1;\n        else {y=root->right->val;}\n        if(abs(x-y)>=2) return false;\n        else{\n            return check(root->left) && check(root->right);\n        }\n    }\n    void levelOrder(TreeNode* root) {\n        deque<pair<TreeNode*,int>> de;\n        vector<vector<int>> ans;\n        vector<pair<int,int>> now;\n        de.push_back(pair<TreeNode*,int>(root,0));\n        while(de.empty()==false){\n            auto tmp=de.front();\n            cout<<tmp.first->val<<\" \";\n            de.pop_front();\n            if(tmp.first->left!=nullptr){\n                de.push_back(pair<TreeNode*,int>(tmp.first->left,tmp.second+1));\n            }\n            if(tmp.first->right!=nullptr){\n                de.push_back(pair<TreeNode*,int>(tmp.first->right,tmp.second+1));\n            }\n        }\n        cout<<endl;\n    }\n    bool isBalanced(TreeNode* root) {\n        if(root==nullptr) return root;\n        height(root);\n        levelOrder(root);\n        return check(root);\n    }\n};","compare_result":"110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree"}