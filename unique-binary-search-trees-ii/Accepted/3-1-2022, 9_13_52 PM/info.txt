{"id":651243687,"lang":"cpp","time":"3 months, 3 weeks","timestamp":1646140432,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/651243687/","is_pending":"Not Pending","title":"Unique Binary Search Trees II","memory":"15.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<TreeNode*> re(int l,int r){\n        if(r<l){\n            return {nullptr};\n        }\n        else if(r==l){\n            return {new TreeNode(l)};\n        }\n        else{\n            vector<TreeNode*> ans;\n            for(int i=l;i<=r;i++){\n                vector<TreeNode*> left = re(l,i-1),right = re(i+1,r);\n                for(int j=0;j<left.size();j++){\n                    for(int k=0;k<right.size();k++){\n                        ans.emplace_back(new TreeNode(i,left[j],right[k]));\n                    }\n                }\n            }\n            return ans;\n        }\n    }\n    vector<TreeNode*> generateTrees(int n) {\n        return re(1,n);\n    }\n};","compare_result":"11111111","title_slug":"unique-binary-search-trees-ii"}