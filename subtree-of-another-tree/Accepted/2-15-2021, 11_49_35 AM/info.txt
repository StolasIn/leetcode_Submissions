{"id":456188437,"lang":"cpp","time":"1 year, 4 months","timestamp":1613360975,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/456188437/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"29.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<TreeNode*> test;\n    TreeNode* find(TreeNode* s, TreeNode* t){\n        if(s==nullptr) return nullptr;\n        if(s->val==t->val){\n            test.emplace_back(s);\n        }\n        auto x=find(s->left,t);\n        auto y=find(s->right,t);\n        if(x!=nullptr){\n            return x;\n        }\n        else if(y!=nullptr){\n            return y;\n        }\n        return nullptr;\n    }\n    bool isequ(TreeNode* s, TreeNode* t){\n        if(s==nullptr && t==nullptr){\n            return true;\n        }\n        else if(s!=nullptr && t!=nullptr){\n            if(s->val!=t->val) return false;\n            else return isequ(s->left,t->left)&isequ(s->right,t->right);\n        }\n        return false;\n    }\n    bool isSubtree(TreeNode* s, TreeNode* t) {\n        find(s,t);\n        for(int i=0;i<test.size();i++){\n            if(isequ(test[i],t)==true) return true;\n        }\n        return false;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subtree-of-another-tree"}