{"id":452722718,"lang":"cpp","time":"1 year, 4 months","timestamp":1612618110,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/452722718/","is_pending":"Not Pending","title":"Insert Delete GetRandom O(1)","memory":"22.6 MB","code":"class RandomizedSet {\npublic:\n    /** Initialize your data structure here. */\n    unordered_map<int,int> map;\n    vector<int> n;\n    RandomizedSet() {\n        \n    }\n    \n    /** Inserts a value to the set. Returns true if the set did not already contain the specified element. */\n    bool insert(int val) {\n        if(map.find(val)!=map.end()) return false;\n        n.emplace_back(val);\n        map[val]=n.size()-1;\n        return true;\n    }\n    \n    /** Removes a value from the set. Returns true if the set contained the specified element. */\n    bool remove(int val) {\n        if(map.find(val)==map.end()) return false;\n        map[n[map[n.back()]]]=map[val];\n        swap(n[map[val]],n.back());\n        n.pop_back();\n        map.erase(val);\n        return true;\n    }\n    \n    /** Get a random element from the set. */\n    int getRandom() {\n        return n[rand()%n.size()];\n    }\n};\n\n/**\n * Your RandomizedSet object will be instantiated and called as such:\n * RandomizedSet* obj = new RandomizedSet();\n * bool param_1 = obj->insert(val);\n * bool param_2 = obj->remove(val);\n * int param_3 = obj->getRandom();\n */","compare_result":"111111111111111111","title_slug":"insert-delete-getrandom-o1"}