{"id":522739600,"lang":"cpp","time":"11 months, 1 week","timestamp":1626318945,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/522739600/","is_pending":"Not Pending","title":"Binary Tree Pruning","memory":"9.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* dfs(TreeNode* root){\n        if(root==nullptr) return nullptr;\n        root->left=dfs(root->left);\n        root->right=dfs(root->right);\n        if(root->left==nullptr && root->right==nullptr && root->val==0){\n            return nullptr;\n        }\n        else{\n            return root;\n        }\n    }\n    TreeNode* pruneTree(TreeNode* root) {\n        return dfs(root);;\n    }\n};","compare_result":"111111111111111111111111111111","title_slug":"binary-tree-pruning"}