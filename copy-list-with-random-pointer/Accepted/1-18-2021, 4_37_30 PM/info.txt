{"id":444493127,"lang":"cpp","time":"1 year, 5 months","timestamp":1610959050,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/444493127/","is_pending":"Not Pending","title":"Copy List with Random Pointer","memory":"11.6 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* next;\n    Node* random;\n    \n    Node(int _val) {\n        val = _val;\n        next = NULL;\n        random = NULL;\n    }\n};\n*/\n\nclass Solution {\npublic:\n    unordered_map<Node*, Node*> map;   // map from current node to deep node\n    Node* copyRandomList(Node* head) {\n        if(head==nullptr) return nullptr;\n        if(map.find(head) != map.end()) return map[head];\n        Node* n = new Node(head->val);\n        map[head] = n;\n        n->next = copyRandomList(head->next);\n        n->random = copyRandomList(head->random);\n        \n        return n;\n    }\n};","compare_result":"1111111111111111111","title_slug":"copy-list-with-random-pointer"}