{"id":566169885,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1633431036,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/566169885/","is_pending":"Not Pending","title":"Binary Tree Tilt","memory":"23.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int ans;\n    int gen(TreeNode* root){\n        if(root==nullptr){\n            return 0;\n        }\n        root->val+=gen(root->left)+gen(root->right);\n        return root->val;\n    }\n    int re(TreeNode* root){\n        int l,r;\n        if(root==nullptr) return 0;\n        if(root->left==nullptr){\n            l=0;\n        }\n        else{\n            l=re(root->left);\n        }\n        if(root->right==nullptr){\n            r=0;\n        }\n        else{\n            r=re(root->right);\n        }\n        int t=root->val; \n        root->val=abs(r-l);\n        ans+=root->val;\n        return t;\n    }\n    int findTilt(TreeNode* root) {\n        gen(root);\n        ans=0;\n        re(root);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-tilt"}