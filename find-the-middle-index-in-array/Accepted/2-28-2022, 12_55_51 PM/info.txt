{"id":650356188,"lang":"cpp","time":"3 months, 3 weeks","timestamp":1646024151,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/650356188/","is_pending":"Not Pending","title":"Find the Middle Index in Array","memory":"12.6 MB","code":"//Approach-1 (Using O(n) space)\nclass Solution {\npublic:\n    int findMiddleIndex(vector<int>& nums) {\n        int n = nums.size();\n        \n        vector<int> left(n);\n        vector<int> right(n);\n        \n        //Calculate cumulative sum from left to right\n        left[0] = nums[0];\n        for(int i = 1; i< n; i++) {\n            left[i] = nums[i] + left[i-1];\n        }\n        \n        //Calculate cumulative sum from right to left\n        right[n-1] = nums[n-1];\n        for(int i = n-2; i >= 0; i--) {\n            right[i] = nums[i] + right[i+1];\n        }\n        \n        //if at any i, left cumulative sum == right cumulative sum, that's my answer\n        for(int i = 0; i<n; i++) {\n            if(left[i] == right[i])\n                return i;\n        }\n        \n        return -1;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-middle-index-in-array"}