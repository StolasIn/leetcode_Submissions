{"id":576137031,"lang":"cpp","time":"8Â months","timestamp":1635041228,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/576137031/","is_pending":"Not Pending","title":"Count Complete Tree Nodes","memory":"30.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int countNodes(TreeNode* root) {\n        int x=countl(root);\n        int y=countr(root);\n        if(x==y){\n            return (1<<x)-1;\n        }\n        return 1+countNodes(root->left)+countNodes(root->right);\n    }\n    int countl(TreeNode* root){\n        int h=0;\n        while(root){\n            root=root->left;\n            h++;\n        }\n        return h;\n    }\n    int countr(TreeNode* root){\n        int h=0;\n        while(root){\n            root=root->right;\n            h++;\n        }\n        return h;\n    }\n};","compare_result":"111111111111111111","title_slug":"count-complete-tree-nodes"}