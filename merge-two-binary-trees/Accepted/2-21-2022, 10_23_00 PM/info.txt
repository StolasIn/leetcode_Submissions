{"id":646017591,"lang":"cpp","time":"4Â months","timestamp":1645453380,"status_display":"Accepted","runtime":"71 ms","url":"/submissions/detail/646017591/","is_pending":"Not Pending","title":"Merge Two Binary Trees","memory":"32.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* mergeTrees(TreeNode* r1, TreeNode* r2) {\n        if(r1==nullptr && r2==nullptr){\n            return nullptr;\n        }\n        TreeNode* now = new TreeNode(0);\n        if(r1!=nullptr && r2!=nullptr){\n            now->val = r1->val + r2->val;\n            now->left = mergeTrees(r1->left,r2->left);\n            now->right = mergeTrees(r1->right,r2->right);\n        }\n        else if(r1!=nullptr){\n            now = r1;\n        }\n        else{\n            now = r2;\n        }\n        return now;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-binary-trees"}