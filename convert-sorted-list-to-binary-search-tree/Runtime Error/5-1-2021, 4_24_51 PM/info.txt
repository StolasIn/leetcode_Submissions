{"id":487337551,"lang":"cpp","time":"1 year, 1 month","timestamp":1619857491,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/487337551/","is_pending":"Not Pending","title":"Convert Sorted List to Binary Search Tree","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* re(vector<int>& v,int l,int r){\n        int mid=(r-l)/2+l;\n        TreeNode* t = new TreeNode(v[mid]);\n        if(r==l){\n            return t;\n        }\n        if(r<l){\n            return nullptr;\n        }\n        t->left=re(v,l,mid-1);\n        t->right=re(v,mid+1,r);\n        return t;\n    }\n    TreeNode* sortedListToBST(ListNode* head) {\n        vector<int> v;\n        while(head!=nullptr){\n            v.emplace_back(head->val);\n            head=head->next;\n        }\n        auto t=re(v,0,v.size()-1);\n        return t;\n    }\n};","compare_result":"10000000000000000000000000000000","title_slug":"convert-sorted-list-to-binary-search-tree"}