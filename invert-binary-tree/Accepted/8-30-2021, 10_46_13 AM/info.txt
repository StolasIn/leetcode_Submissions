{"id":546433815,"lang":"java","time":"9 months, 3 weeks","timestamp":1630291573,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/546433815/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"36.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public void inv(TreeNode t){\n        if(t==null) return;\n        TreeNode tmp = t.left;\n        t.left=t.right;\n        t.right=tmp;\n        inv(t.left);\n        inv(t.right);\n    }\n    public TreeNode invertTree(TreeNode root) {\n        inv(root);\n        return root;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree"}