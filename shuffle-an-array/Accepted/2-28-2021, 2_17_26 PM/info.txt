{"id":461595746,"lang":"cpp","time":"1 year, 3 months","timestamp":1614493046,"status_display":"Accepted","runtime":"104 ms","url":"/submissions/detail/461595746/","is_pending":"Not Pending","title":"Shuffle an Array","memory":"90.3 MB","code":"class Solution {\npublic:\n    vector<int> ori;\n    vector<int> shu;\n    Solution(vector<int>& nums) {\n        ori.assign(nums.begin(),nums.end());\n        shu.assign(nums.begin(),nums.end());\n    }\n    \n    /** Resets the array to its original configuration and return it. */\n    vector<int> reset() {\n        return ori;\n    }\n    \n    /** Returns a random shuffling of the array. */\n    vector<int> shuffle() {\n        int r;\n        int s=shu.size();\n        for(int i=0;i<s;i++){\n            r=rand()%s;\n            swap(shu[i],shu[r]);\n        }\n        return shu;\n    }\n};\n\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution* obj = new Solution(nums);\n * vector<int> param_1 = obj->reset();\n * vector<int> param_2 = obj->shuffle();\n */","compare_result":"1111111111","title_slug":"shuffle-an-array"}