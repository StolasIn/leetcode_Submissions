{"id":529606380,"lang":"cpp","time":"10 months, 4 weeks","timestamp":1627473323,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/529606380/","is_pending":"Not Pending","title":"All Nodes Distance K in Binary Tree","memory":"12.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    unordered_map<int,TreeNode*> par;\n    vector<int> ans;\n    int x,ta;\n    void dfs1(TreeNode* now,TreeNode* from){\n        if(now==nullptr) return;\n        par[now->val]=from;\n        dfs1(now->left,now);\n        dfs1(now->right,now);\n    }\n    void dfs2(TreeNode* now,int dis,TreeNode* from){\n        if(now==nullptr) return;\n        if(dis==x){\n            ans.emplace_back(now->val);\n            return;\n        }\n        if(now->left!=from) dfs2(now->left,dis+1,now);\n        if(now->right!=from) dfs2(now->right,dis+1,now);\n        if(par[now->val]!=from) dfs2(par[now->val],dis+1,now);\n    }\n    vector<int> distanceK(TreeNode* root, TreeNode* target, int k) {\n        x=k;\n        ta=target->val;\n        dfs1(root,nullptr);\n        dfs2(target,0,nullptr);\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"all-nodes-distance-k-in-binary-tree"}