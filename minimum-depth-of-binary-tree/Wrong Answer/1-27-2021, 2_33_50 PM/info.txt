{"id":448402895,"lang":"cpp","time":"1 year, 4 months","timestamp":1611729230,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/448402895/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int height(TreeNode* root){\n        if(root==nullptr) return 0;\n        int x=height(root->left);\n        int y=height(root->right);\n        return (x<y ? x : y)+1;\n    }\n    int minDepth(TreeNode* root) {\n        if(root==nullptr) return 0;\n        return height(root);\n    }\n};","compare_result":"1011001100010111101001000101000110100001111111110011","title_slug":"minimum-depth-of-binary-tree"}