{"id":664757067,"lang":"cpp","time":"3Â months","timestamp":1647916752,"status_display":"Accepted","runtime":"208 ms","url":"/submissions/detail/664757067/","is_pending":"Not Pending","title":"Network Delay Time","memory":"40.1 MB","code":"struct node{\n    int to,d;\n    bool operator<(const node& a) const {\n        return d>a.d;\n    }\n};\nclass Solution {\npublic:\n    int networkDelayTime(vector<vector<int>>& t, int n, int k) {\n        int m = t.size();\n        vector<vector<node>> g(n+1);\n        vector<int> dis(n+1,INT_MAX);\n        vector<bool> vis(n+1,false);\n        priority_queue<node> pq;\n        for(int i=0;i<m;i++){\n            g[t[i][0]].emplace_back(node{t[i][1],t[i][2]});\n        }\n        dis[k] = 0;\n        pq.push(node{k,0});\n        while(!pq.empty()){\n            node no = pq.top();\n            pq.pop();\n            if(vis[no.to]==true){\n                continue;\n            }\n            vis[no.to] = true;\n            for(int i=0;i<g[no.to].size();i++){\n                if(dis[g[no.to][i].to]>no.d+g[no.to][i].d){\n                    dis[g[no.to][i].to] = no.d+g[no.to][i].d;\n                    pq.push(node{g[no.to][i].to,dis[g[no.to][i].to]});\n                }\n            }\n        }\n        int ma = INT_MIN;\n        for(int i=1;i<dis.size();i++){\n            ma = max(ma,dis[i]);\n        }\n        return ma == INT_MAX? -1:ma;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"network-delay-time"}